{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar PropTypes = _interopDefault(require('prop-types'));\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css = \".r-segmented-control {\\n    width: 100%;\\n    background-color: #fff;    \\n    border-bottom: 1px solid #e9eff3;\\n    border-left: 1px solid #fff;\\n    text-align: center;\\n    height: 38px;\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    direction: ltr;\\n    display: table;\\n}\\n\\n.r-segmented-control > ul {\\n    display: table-row;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    padding: 6px 8px;\\n}\\n\\n.r-segmented-control > ul > li {\\n    background: #fff;\\n    border: 1px solid;    \\n    border-right: none;\\n    font-size: 13px;\\n    height: 26px;\\n    cursor: pointer;\\n    -webkit-user-select: none;\\n    -moz-user-select: none;\\n    -ms-user-select: none;\\n    user-select: none;\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    vertical-align: middle;\\n    display: table-cell;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    -ms-flex: auto;\\n    flex: auto;\\n}\\n\\n.r-segmented-control > ul > li:first-of-type {\\n    border-top-left-radius: 4px;\\n    border-bottom-left-radius: 4px;\\n}\\n\\n.r-segmented-control > ul > li:last-of-type {\\n    border-right: 1px solid;\\n    border-top-right-radius: 4px;\\n    border-bottom-right-radius: 4px;\\n}\\n\\n.r-segmented-control > ul > li[aria-disabled=\\\"true\\\"] {\\n    border-color: #ccc !important;\\n    color: #ccc !important;\\n    cursor: not-allowed;\\n}\\n\\n.r-segmented-control > ul > li.base {\\n    border-color: rgb(0,122,255) !important;\\n    color: rgb(0,122,255);\\n    background: #fff !important;\\n}\\n\\n.r-segmented-control > ul > li.dark {\\n    border-color: #333 !important;\\n    color: #333;\\n    background: #fff !important;\\n}\\n\\n.r-segmented-control > ul > li.light {\\n    border-color: rgb(247, 247, 247) !important;\\n    color: rgb(247, 247, 247);\\n    background: transparent !important;\\n}\\n\\n.r-segmented-control > ul > li.success {\\n    border-color: #5cb85c !important;\\n    color: #5cb85c;\\n    background: #fff !important;\\n}\\n\\n.r-segmented-control > ul > li.error {\\n    border-color: #d9534f !important;\\n    color: #d9534f;\\n    background: #fff !important;\\n}\\n\\n.r-segmented-control > ul > li.base.selected {\\n    background: rgb(0,122,255) !important;    \\n    color: #fff !important;\\n}\\n\\n.r-segmented-control > ul > li.dark.selected {\\n    background: #333 !important;\\n    color: #fff !important;\\n}\\n\\n.r-segmented-control > ul > li.light.selected {\\n    background: rgb(247, 247, 247) !important;\\n    color: #333 !important;\\n}\\n\\n.r-segmented-control > ul > li.success.selected {\\n    background: #5cb85c !important; \\n    color: #fff !important;\\n}\\n\\n.r-segmented-control > ul > li.error.selected {\\n    background: #d9534f !important;\\n    color: #fff !important;\\n}\\n\\n.rsc-warning {\\n\\n}\";\nstyleInject(css);\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nvar SegmentedControl = function (_Component) {\n  inherits(SegmentedControl, _Component);\n\n  function SegmentedControl(props) {\n    classCallCheck(this, SegmentedControl);\n\n    var _this = possibleConstructorReturn(this, (SegmentedControl.__proto__ || Object.getPrototypeOf(SegmentedControl)).call(this, props));\n\n    _this.onChange = function (selectedSegment) {\n      _this.setState({\n        selectedSegment: selectedSegment\n      });\n\n      _this.props.onChangeSegment(selectedSegment);\n    };\n\n    _this.renderSegments = function () {\n      return _this.props.segments.map(function (segment, i) {\n        if (i === _this.state.selectedSegment) {\n          return React__default.createElement('li', {\n            key: i,\n            className: _this.props.variant + ' selected'\n          }, segment.name);\n        } else {\n          if (segment.disabled) {\n            return React__default.createElement('li', {\n              key: i,\n              className: '' + _this.props.variant,\n              'aria-disabled': 'true'\n            }, segment.name);\n          } else {\n            return React__default.createElement('li', {\n              key: i,\n              className: '' + _this.props.variant,\n              onClick: function onClick() {\n                return _this.onChange(i);\n              }\n            }, segment.name);\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      selectedSegment: 0\n    };\n    _this.renderSegments = _this.renderSegments.bind(_this);\n    return _this;\n  }\n\n  createClass(SegmentedControl, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var selected = this.props.selected;\n\n      if (this.props.segments.map(function (e) {\n        return e.disabled;\n      }).indexOf(true) == selected) {\n        delete this.props.segments[selected].disabled;\n        console.error('Selected segment cannot be disabled');\n      }\n\n      this.setState({\n        selectedSegment: selected\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React__default.createElement('div', {\n        className: 'r-segmented-control'\n      }, React__default.createElement('ul', null, this.renderSegments()));\n    }\n  }]);\n  return SegmentedControl;\n}(React.Component);\n\nSegmentedControl.defaultProps = {\n  onChangeSegment: function onChangeSegment(x) {\n    return x;\n  },\n  variant: 'base',\n  selected: 0\n};\nSegmentedControl.propTypes = {\n  segments: PropTypes.array.isRequired,\n  selected: PropTypes.number,\n  variant: PropTypes.string\n};\nexports.SegmentedControl = SegmentedControl;","map":null,"metadata":{},"sourceType":"script"}