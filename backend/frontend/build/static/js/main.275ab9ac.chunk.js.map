{"version":3,"sources":["components/LandingHero.js","components/StartupHero.js","components/GuestLanding.js","components/Pagination.js","components/Listing.js","components/Feed.js","components/StudentLanding.js","views/Home.js","static/constants.js","components/FeedTemp.js","views/Jobs.js","views/Bookmarks.js","views/Profile.js","views/Settings.js","views/Dashboard.js","views/OrgProfile.js","views/MyListings.js","views/LogIn.js","views/Error.js","views/NewListing.js","views/JobPage.js","views/InitAccount.js","components/StudentCard.js","components/StudentFeed.js","views/Students.js","views/EditListing.js","views/OrgSettings.js","components/Nav.js","components/BannerError.js","components/NavStartup.js","components/MasterNav.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["LandingHero","state","searchForward","props","history","push","pathname","search","document","getElementById","value","id","type","placeholder","className","onSubmit","this","onClick","icon","style","verticalAlign","color","fontSize","marginBottom","Component","withRouter","onChange","GuestLanding","md","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","Pagination","gotoPage","page","onPageChanged","f","currentPage","Math","max","min","totalPages","paginationData","pageLimit","totalRecords","setState","handleClick","evt","preventDefault","handleMoveLeft","pageNeighbours","handleMoveRight","fetchPageNumbers","totalNumbers","startPage","endPage","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","ceil","aria-label","map","index","key","href","aria-hidden","Listing","company","bookmarked","isAuthenticated","isStartup","axios","url","user","method","headers","localStorage","getItem","userResponse","data","userJson","dispatch","oldUserBookmarks","Object","keys","userBookmarks","componentDidMount","console","error","display","fetch","then","res","json","catch","resp","isBookmarked","ev","target","src","onError","addDefaultSrc","logo","alt","jobPage","listName","orgName","locationIcon","listLocation","deadlineIcon","listDeadline","listDesc","appIcon","e","bookmarkThis","bookmarkIcon","editIcon","clear","connect","feedLength","formatDateString","str","year","substring","month","day","Feed","listings","slice","post","listOrgID","StudentLanding","log","userName","Home","firstName","categoryList","label","sortOptions","isPaidList","industryList","degreeList","studentSortOptions","Jobs","isPaid","listCategory","sort","handleCategoryChange","selectedOption","handleSortChange","handleIsPaidChange","location","event","click","defaultValue","onKeyPress","keyPressed","minHeight","xl","lg","options","theme","borderRadius","colors","primary25","primary","primary50","width","Bookmarks","response","bookmarks","Profile","student","userID","xs","lastName","userPitch","sm","educationIcon","userDegree","userGradYear","majorIcon","userMajor","gradeIcon","parseFloat","userGPA","toFixed","emailIcon","email","resumeIcon","skillsIcon","extraCurriculars","date","Date","minDate","getFullYear","maxDate","Settings","borderColor","backgroundColor","errorBlocks","getElementsByClassName","x","resetErrors","isValid","profileResponse","runResponse","status","handleUserError","bounce","errorIcon","successIcon","updateSettings","htmlFor","autoComplete","minLength","pattern","maxLength","title","required","updateProfile","name","accept","Dashboard","OrgProfile","listingID","listing","Software","getLabelFromValue","orgIndustry","orgDesc","addListingStyles","position","padding","height","boxSizing","textDecoration","MyListings","newListing","paddingBottom","addIcon","passMatch","showPass","showSignupPass","y","LogIn","setItem","token","is_startup","removeItem","password","newSignup","postLogin","showIcon","hideIcon","loginIcon","registerUser","marginTop","checkPassMatch","signupIcon","Error","Req","d","getMonth","getDay","NewListing","JSON","stringify","postListing","JobPage","jobCategoryIcon","textAlign","externalLink","rel","whiteSpace","listLongDesc","successfulRegister","InitAccount","degree","body","userData","gradIcon","gradYear","bio","Students","users","minGPA","handleGPAFilterChange","EditListing","result","updateListing","handleIndustryChange","industry","orgLocation","Nav","active","window","reload","exact","activeClassName","logoActive","scrollTo","overflow","menu","undefined","jobs","jobsActive","bookmark","bookmarkActive","userActive","darr","logout","settings","settingsActive","signoutIcon","login","NavStartup","dashboard","dashboardActive","students","studentsActive","listingsActive","MasterNav","Footer","size","App","path","render","match","params","uid","OrgSettings","lid","oid","component","Boolean","hostname","initialState","persistConfig","storage","persistedReducer","persistReducer","action","store","createStore","persistor","persistStore","ReactDOM","loading","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.275ab9ac.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Container } from 'react-grid-system';\nimport { withRouter } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch as search } from '@fortawesome/free-solid-svg-icons'\n\nclass LandingHero extends Component {\n  state = {\n\n  }\n\n  searchForward = () => {\n      this.props.history.push({\n          pathname: '/jobs',\n          state: {\n              search: document.getElementById(\"jobs-search-bar\").value\n          }\n      })\n  }\n\n  render () {\n      return (\n        <span>\n          <div id=\"hero\">\n            <Container>\n              <div id=\"hero-inner\">\n                <h1>What type of experience are you looking for?</h1>\n                  <div id=\"search-bar-wrapper\">\n                     <input type=\"search\" id=\"jobs-search-bar\" placeholder=\"Search for a job or internship...\" className=\"search\" onSubmit={this.searchForward} />\n                       <button id=\"search-icon-wrapper\" onClick={this.searchForward} >\n                         <FontAwesomeIcon icon={search} style={{verticalAlign: 'middle', color: '#8e8e8e', fontSize: 18 + 'px', marginBottom: 4 + 'px'}} />\n                       </button>\n                  </div>\n              </div>\n            </Container>\n          </div>\n        </span>\n      )\n   }\n}\n\nexport default withRouter(LandingHero);\n","import React, { Component } from 'react';\nimport { Container } from 'react-grid-system';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch as search } from '@fortawesome/free-solid-svg-icons';\n\nexport default class LandingHero extends Component {\n  state = {\n  }\n\n  render () {\n      return (\n        <span>\n          <div id=\"hero\">\n            <Container>\n              <div id=\"hero-inner\">\n                <h1>Find the perfect candidate,</h1>\n                  <div id=\"search-bar-wrapper\">\n                     <input type=\"search\" id=\"jobs-search-bar\" placeholder=\"Search for a skill, major or qualification...\" className=\"search\" onChange={this.search} ></input>\n                       <button id=\"search-icon-wrapper\" onClick={this.search} >\n                         <FontAwesomeIcon icon={search} style={{verticalAlign: 'middle', color: '#8e8e8e', fontSize: 18 + 'px', marginBottom: 4 + 'px'}} />\n                       </button>\n                  </div>\n              </div>\n            </Container>\n          </div>\n        </span>\n      )\n   }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\n\nexport default class GuestLanding extends Component {\n  state = {\n  }\n\n  render () {\n      return (\n        <Container id=\"below\">\n          <Row>\n            <Col md={4}>\n              <h3>Title 1</h3>\n              <p>Since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.</p>\n            </Col>\n            <Col md={4}>\n              <h3>Title 2</h3>\n              <p>Printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries.</p>\n            </Col>\n            <Col md={4}>\n              <h3>Title 3</h3>\n              <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown printer took a galley of type.</p>\n            </Col>\n          </Row>\n        </Container>\n      )\n    }\n  }\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\n/**\n * Helper method for creating a range of numbers\n * range(1, 5) => [1, 2, 3, 4, 5]\n */\nconst range = (from, to, step = 1) => {\n    let i = from;\n    const range = [];\n\n    while (i <= to) {\n        range.push(i);\n        i += step;\n    }\n\n    return range;\n}\n\nclass Pagination extends Component {\n\n    constructor(props) {\n        super(props);\n        const { totalRecords = null, pageLimit = 8, pageNeighbours = 0 } = props;\n\n        this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 8;\n        this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n        // pageNeighbours can be: 0, 1 or 2\n        this.pageNeighbours = typeof pageNeighbours === 'number'\n            ? Math.max(0, Math.min(pageNeighbours, 2))\n            : 0;\n\n        this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n        this.state = { currentPage: 1 };\n    }\n\n    componentDidMount() {\n        this.gotoPage(1);\n    }\n\n    gotoPage = page => {\n        const { onPageChanged = f => f } = this.props;\n\n        const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n        const paginationData = {\n            currentPage,\n            totalPages: this.totalPages,\n            pageLimit: this.pageLimit,\n            totalRecords: this.totalRecords\n        };\n\n        this.setState({ currentPage }, () => onPageChanged(paginationData));\n    }\n\n    handleClick = page => evt => {\n        evt.preventDefault();\n        this.gotoPage(page);\n    }\n\n    handleMoveLeft = evt => {\n        evt.preventDefault();\n        this.gotoPage(this.state.currentPage - (this.pageNeighbours * 2) - 1);\n    }\n\n    handleMoveRight = evt => {\n        evt.preventDefault();\n        this.gotoPage(this.state.currentPage + (this.pageNeighbours * 2) + 1);\n    }\n\n    /**\n     * Let's say we have 10 pages and we set pageNeighbours to 2\n     * Given that the current page is 6\n     * The pagination control will look like the following:\n     *\n     * (1) < {4 5} [6] {7 8} > (10)\n     *\n     * (x) => terminal pages: first and last page(always visible)\n     * [x] => represents current page\n     * {...x} => represents page neighbours\n     */\n    fetchPageNumbers = () => {\n\n        const totalPages = this.totalPages;\n        const currentPage = this.state.currentPage;\n        const pageNeighbours = this.pageNeighbours;\n\n        /**\n         * totalNumbers: the total page numbers to show on the control\n         * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n         */\n        const totalNumbers = (this.pageNeighbours * 2) + 3;\n        const totalBlocks = totalNumbers + 2;\n\n        if (totalPages > totalBlocks) {\n\n            const startPage = Math.max(2, currentPage - pageNeighbours);\n            const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n            let pages = range(startPage, endPage);\n\n            /**\n             * hasLeftSpill: has hidden pages to the left\n             * hasRightSpill: has hidden pages to the right\n             * spillOffset: number of hidden pages either to the left or to the right\n             */\n            const hasLeftSpill = startPage > 2;\n            const hasRightSpill = (totalPages - endPage) > 1;\n            const spillOffset = totalNumbers - (pages.length + 1);\n\n            switch (true) {\n                // handle: (1) < {5 6} [7] {8 9} (10)\n                case (hasLeftSpill && !hasRightSpill): {\n                    const extraPages = range(startPage - spillOffset, startPage - 1);\n                    pages = [LEFT_PAGE, ...extraPages, ...pages];\n                    break;\n                }\n\n                // handle: (1) {2 3} [4] {5 6} > (10)\n                case (!hasLeftSpill && hasRightSpill): {\n                    const extraPages = range(endPage + 1, endPage + spillOffset);\n                    pages = [...pages, ...extraPages, RIGHT_PAGE];\n                    break;\n                }\n\n                // handle: (1) < {4 5} [6] {7 8} > (10)\n                case (hasLeftSpill && hasRightSpill):\n                default: {\n                    pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n                    break;\n                }\n            }\n\n            return [1, ...pages, totalPages];\n\n        }\n\n        return range(1, totalPages);\n\n    }\n\n    render() {\n\n        if (!this.totalRecords || this.totalPages === 1) return null;\n\n        const { currentPage } = this.state;\n        const pages = this.fetchPageNumbers();\n\n        return (\n            <>\n                <nav aria-label=\"Countries Pagination\">\n                    <ul className=\"pagination\">\n                        { pages.map((page, index) => {\n\n                            if (page === LEFT_PAGE) return (\n                                <li key={index} className=\"page-item\">\n                                    <a className=\"page-link\" href=\"#\" aria-label=\"Previous\" onClick={this.handleMoveLeft}>\n                                        <span aria-hidden=\"true\">&laquo;</span>\n                                        <span className=\"sr-only\">Previous</span>\n                                    </a>\n                                </li>\n                            );\n\n                            if (page === RIGHT_PAGE) return (\n                                <li key={index} className=\"page-item\">\n                                    <a className=\"page-link\" href=\"#\" aria-label=\"Next\" onClick={this.handleMoveRight}>\n                                        <span aria-hidden=\"true\">&raquo;</span>\n                                        <span className=\"sr-only\">Next</span>\n                                    </a>\n                                </li>\n                            );\n\n                            return (\n                                <li key={index} className={`page-item${ currentPage === page ? ' active' : ''}`}>\n                                    <a className=\"page-link\" href=\"#\" onClick={ this.handleClick(page) }>{ page }</a>\n                                </li>\n                            );\n\n                        }) }\n\n                    </ul>\n                </nav>\n            </>\n        );\n\n    }\n}\n\nPagination.propTypes = {\n    totalRecords: PropTypes.number.isRequired,\n    pageLimit: PropTypes.number,\n    pageNeighbours: PropTypes.number,\n    onPageChanged: PropTypes.func\n};\n\nexport default Pagination;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as axios from 'axios';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBookmark as bookmarkIcon, faExternalLinkAlt as appIcon, faMapMarkerAlt as locationIcon, faEdit as editIcon } from '@fortawesome/free-solid-svg-icons'\nimport { faClock as deadlineIcon } from '@fortawesome/free-regular-svg-icons'\n\nclass Listing extends Component {\n  state = {\n    company: [],\n    bookmarked: false\n  }\n\n  async UNSAFE_componentWillMount() {\n    if (this.props.isAuthenticated && !this.props.isStartup) {\n      try {\n        const userResponse = await axios({\n            url:'/api/users/' + this.props.user.id + \"/\",\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json;charset=UTF-8',\n              'Authorization': 'Token ' + localStorage.getItem(\"token\")\n            },\n          });\n        const userJson = await userResponse.data;\n        this.props.dispatch({ type: \"UPDATEUSER\", user: userJson });\n        const oldUserBookmarks = Object.keys(userJson.userBookmarks);\n        for (var i = 0; i < oldUserBookmarks.length; ++i) {\n          if (this.props.id == oldUserBookmarks[i]) {\n            this.setState({bookmarked: true}, this.componentDidMount);\n            break;\n          }\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this.setState(this.state);\n  }\n\n  componentDidMount() {\n    if (!this.props.isAuthenticated || this.props.isStartup) document.getElementById(\"bookmark-button-\" + this.props.id).style.display = 'none';\n    if (this.props.isStartup && this.props.company == this.props.user.id) document.getElementById(\"edit-button-\" + this.props.id).style.display = 'inline-block';\n    fetch('/api/startups/' + this.props.company + '/?format=json', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'content-type': 'application/json'\n      }\n    })\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ company: data });\n      // console.log(\"LINE 58 --> Fetched Company Name\");\n    })\n    .catch(console.error)\n  }\n\n  async updateUser() {\n    try {\n      const userResponse = await axios({\n          url:' /api/user/' + this.props.user.id,\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Authorization': 'Token ' + localStorage.getItem(\"token\")\n          },\n        });\n      const userJson = await userResponse.data;\n      this.props.dispatch({ type: \"UPDATEUSER\", user: userJson });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async bookmarkThis() {\n    try {\n      const resp = await axios({\n          url:' /api/listings/' + this.props.id + '/toggle/',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Authorization': 'Token ' + localStorage.getItem(\"token\")\n          },\n        });\n      const json = await resp.data;\n      this.setState({bookmarked: json.isBookmarked}, this.componentDidMount);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/org/missing.png';\n  }\n\n  render () {\n      return (\n        <div className=\"listing\">\n          <Link className=\"image-wrapper\" to={\"/org/\" + this.props.company}><img onError={this.addDefaultSrc} src={this.props.logo} alt={this.props.company} /></Link>\n          <div className=\"inf\">\n            <Link to={this.props.jobPage}><h2>{this.props.listName} | {this.state.company.orgName}</h2></Link>\n            <p className=\"sub-title\">\n              <FontAwesomeIcon icon={locationIcon} />\n              &nbsp; {this.props.listLocation} &nbsp; &mdash; &nbsp;&nbsp;\n              <FontAwesomeIcon icon={deadlineIcon} />\n              &nbsp; {this.props.listDeadline}\n            </p>\n            <p>\n              {this.props.listDesc}\n              &nbsp;<Link to={this.props.jobPage} className=\"read-more\">Read more...</Link>\n            </p>\n            <div className=\"button-wrapper\">\n              <Link to={this.props.jobPage} className=\"button\">\n                { this.props.isStartup ? \"View\" : \"Apply\" } &nbsp;\n                <FontAwesomeIcon icon={appIcon} />\n              </Link>\n              <button className={\"button-secondary \" + (this.state.bookmarked ? \"bookmarked\" : \"bookmark\") } id={\"bookmark-button-\" + this.props.id} onClick={(e) => {e.preventDefault(); this.bookmarkThis()}} >\n                <FontAwesomeIcon icon={bookmarkIcon} />\n                &nbsp; Bookmark\n              </button>\n              <Link style={{display: \"none\"}} className=\"button\" id={\"edit-button-\" + this.props.id} to={\"/my-listings/edit/\" + this.props.id} >\n                Edit\n                &nbsp; <FontAwesomeIcon icon={editIcon} />\n              </Link>\n            </div>\n          </div>\n          <div style={{clear: \"both\"}} />\n          <div className=\"shadow\" />\n        </div>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default connect(mapStateToProps)(Listing);\n","import React, { Component } from 'react';\n\n// Components\nimport Pagination from '../components/Pagination';\nimport Listing from '../components/Listing';\n\nlet errorMessage = \"End of results\";\nlet feedLength = -1;\n\nfunction formatDateString(str) {\n  const year = str.substring(0, 4);\n  let month = str.substring(5, 7);\n  const day = str.substring(8, 10);\n  switch (month) {\n    case \"01\":\n      month = \"January\";\n      break;\n    case \"02\":\n      month = \"February\";\n      break;\n    case \"03\":\n      month = \"March\";\n      break;\n    case \"04\":\n      month = \"April\";\n      break;\n    case \"05\":\n      month = \"May\";\n      break;\n    case \"06\":\n      month = \"June\";\n      break;\n    case \"07\":\n      month = \"July\";\n      break;\n    case \"08\":\n      month = \"August\";\n      break;\n    case \"09\":\n      month = \"September\";\n      break;\n    case \"10\":\n      month = \"October\";\n      break;\n    case \"11\":\n      month = \"November\";\n      break;\n    case \"12\":\n      month = \"December\";\n      break;\n    default:\n      break;\n  }\n  return day + \" \" + month + \", \" + year;\n}\n\nexport default class Feed extends Component {\n  state = {\n\n  }\n\n  render() {\n      if (this.props.feedLength > this.props.listings.length) {\n        feedLength = this.props.listings.length;\n      } else {\n        feedLength = this.props.feedLength;\n      }\n\n      return (\n        <>\n          {this.props.listings.slice(0, feedLength).map(post => (\n            <Listing\n              listName={post.listName}\n              listLocation={post.listLocation}\n              listDesc={post.listDesc}\n              listDeadline={formatDateString(post.listDeadline)}\n              company={post.listOrgID}\n              logo={\"/img/org/\" + post.listOrgID + \".png\"}\n              jobPage={\"/listing/\" + post.id}\n              id={post.id}\n            />\n          ))}\n\n          <p style={{fontSize: \"22px\", color: \"#8e8e8e\"}}>{errorMessage}</p>\n        </>\n      )\n    }\n}\n","import React, { Component } from 'react';\nimport { Container } from 'react-grid-system';\n\n// Components\nimport Feed from '../components/Feed';\n\nexport default class StudentLanding extends Component {\n  state = {\n    listings: []\n  }\n\n  componentDidMount() {\n      fetch('/api/listings/?format=json')\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ listings: data })\n      })\n      .catch(console.log)\n    }\n\n  render () {\n      return (\n        <Container id=\"below\">\n          <h2>Welcome back {this.props.userName},<br></br>Here are some newly posted positions:</h2>\n          <Feed listings={this.state.listings} feedLength={4} />\n        </Container>\n      )\n    }\n  }\n","import React, { Component } from 'react';\n\n// Components\nimport LandingHero from '../components/LandingHero';\nimport StartupHero from '../components/StartupHero';\nimport GuestLanding from '../components/GuestLanding';\nimport StudentLanding from '../components/StudentLanding';\n// redux\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n  state = {\n  }\n\n  render () {\n    if (this.props.isAuthenticated) {\n      if (!this.props.isStartup) {\n        return (\n          <>\n            <LandingHero />\n            <StudentLanding userName={(this.props.user).firstName} />\n          </>\n        )\n      } else {\n        return (\n          <>\n            <StartupHero />\n          </>\n        )\n      }\n    } else {\n      // GUEST LANDING\n      return (\n        <>\n          <LandingHero />\n          <GuestLanding />\n        </>\n      )\n    }\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default connect(mapStateToProps)(Home);\n","export const categoryList = [\n  {label: \"Any\", value: \"\"},\n  {label: \"Accounting/Finance\", value: \"FIN\"},\n  {label: \"Administrative\", value: \"ADM\"},\n  {label: \"Biotechnology\", value: \"BIO\"},\n  {label: \"Chemical/Materials\", value: \"CHEM\"},\n  {label: \"Data/Analysis\", value: \"DATA\"},\n  {label: \"Engineering\", value: \"ENG\"},\n  {label: \"Health/Medicine\", value: \"MED\"},\n  {label: \"Project Management\", value: \"PM\"},\n  {label: \"Marketing/PR\", value: \"PR\"},\n  {label: \"Sales/Business\", value: \"BUS\"},\n  {label: \"Software Development\", value: \"DEV\"},\n  {label: \"Legal\", value: \"LAW\"},\n  {label: \"User Experience/Design\", value: \"UX\"},\n  {label: \"Other\", value: \"MISC\"}\n];\n\nexport const sortOptions = [\n  {label: \"Deadline (Earliest)\", value: \"listDeadline\"},\n  {label: \"Deadline (Lastest)\", value: \"-listDeadline\"},\n  {label: \"Name (A - Z)\", value: \"listName\"},\n  {label: \"Name (Z - A)\", value: \"-listName\"},\n  {label: \"Company\", value: \"listOrgID\"}\n];\n\nexport const isPaidList = [\n  {label: \"Any\", value: \"\"},\n  {label: \"Paid Only\", value: \"true\"},\n  {label: \"Unpaid Only\", value: \"false\"},\n];\n\nexport const industryList = [\n  { label: \"Accounting/Finance\", value: \"FIN\" },\n  { label: \"Administrative\", value: \"ADM\" },\n  { label: \"Biotechnology\", value: \"BIO\" },\n  { label: \"Chemical/Materials\", value: \"CHEM\" },\n  { label: \"Data/Analysis\", value: \"DATA\"},\n  { label: \"Engineering\", value: \"ENG\" },\n  { label: \"Health/Medicine\", value: \"MED\" },\n  { label: \"Project Management\", value: \"PM\" },\n  { label: \"Marketing/PR\", value: \"PR\" },\n  { label: \"Sales/Business\", value: \"BUS\" },\n  { label: \"Software Development\", value: \"DEV\" },\n  { label: \"Legal\", value: \"LAW\" },\n  { label: \"User Experience/Design\", value: \"UX\" },\n  { label: \"Other\", value: \"MISC\" }\n];\n\nexport const degreeList = [\n  { label: \"Bachelors\", value: \"Bachelors\" },\n  { label: \"Masters\", value: \"Masters\" },\n  { label: \"Doctorate\", value: \"Doctorate\" },\n  { label: \"Other\", value: \"Other\" }\n];\n\nexport const studentSortOptions = [\n  { label: \"Graduating (Earliest)\", value: \"userGradYear\" },\n  { label: \"Graduating (Lastest)\", value: \"-userGradYear\" },\n  { label: \"Name (A - Z)\", value: \"firstname\" },\n  { label: \"Name (Z - A)\", value: \"-firstName\" }\n];","import React, { Component } from 'react';\n\n// Components\nimport Pagination from '../components/Pagination';\nimport Listing from '../components/Listing';\n\nlet errorMessage = \"End of results\";\nlet feedLength = -1;\n\nfunction formatDateString(str) {\n  const year = str.substring(0, 4);\n  let month = str.substring(5, 7);\n  const day = str.substring(8, 10);\n  switch (month) {\n    case \"01\":\n      month = \"January\";\n      break;\n    case \"02\":\n      month = \"February\";\n      break;\n    case \"03\":\n      month = \"March\";\n      break;\n    case \"04\":\n      month = \"April\";\n      break;\n    case \"05\":\n      month = \"May\";\n      break;\n    case \"06\":\n      month = \"June\";\n      break;\n    case \"07\":\n      month = \"July\";\n      break;\n    case \"08\":\n      month = \"August\";\n      break;\n    case \"09\":\n      month = \"September\";\n      break;\n    case \"10\":\n      month = \"October\";\n      break;\n    case \"11\":\n      month = \"November\";\n      break;\n    case \"12\":\n      month = \"December\";\n      break;\n    default:\n      break;\n  }\n  return day + \" \" + month + \", \" + year;\n}\n\nclass FeedTemp extends Component {\n\n  state = { allListings: [], currentListings: [], currentPage: null, totalPages: null };\n\n  componentDidMount() {\n    fetch('/api/listings/?format=json&isOpen=true')\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({allListings: data})\n        })\n        .catch(console.log)\n  }\n\n  onPageChanged = data => {\n    const { allListings } = this.state;\n    const { currentPage, totalPages, pageLimit } = data;\n\n    const offset = (currentPage - 1) * pageLimit;\n    const currentListings = allListings.slice(offset, offset + pageLimit);\n\n    this.setState({ currentPage, currentListings, totalPages });\n  };\n\n  render() {\n    const { allListings, currentListings, currentPage, totalPages } = this.state;\n    const totalListings = allListings.length;\n\n    if (totalListings === 0) return null;\n\n    const headerClass = ['text-dark py-2 pr-4 m-0', currentPage ? 'border-gray border-right' : ''].join(' ').trim();\n\n    return (\n        <div className=\"container mb-5\">\n          <div className=\"row d-flex flex-row py-5\">\n\n            <div className=\"w-100 px-4 py-5 d-flex flex-row flex-wrap align-items-center justify-content-between\">\n              <div className=\"d-flex flex-row align-items-center\">\n\n                <h2 className={headerClass}>\n                  <strong className=\"text-secondary\">{totalListings}</strong> Listings Found\n                </h2>\n\n                { currentPage && (\n                    <span className=\"current-page d-inline-block h-100 pl-4 text-secondary\">\n                  Page <span className=\"font-weight-bold\">{ currentPage }</span> / <span className=\"font-weight-bold\">{ totalPages }</span>\n                </span>\n                ) }\n\n              </div>\n\n              <div className=\"d-flex flex-row py-4 align-items-center\">\n                <Pagination totalRecords={totalListings} pageLimit={6} pageNeighbours={1} onPageChanged={this.onPageChanged} />\n              </div>\n            </div>\n\n            { currentListings.map(post => <Listing\n                listName={post.listName}\n                listLocation={post.listLocation}\n                listDesc={post.listDesc}\n                listDeadline={formatDateString(post.listDeadline)}\n                company={post.listOrgID}\n                logo={\"/img/org/\" + post.listOrgID + \".png\"}\n                jobPage={\"/listing/\" + post.id}\n                id={post.id}\n            />) }\n\n          </div>\n        </div>\n    );\n  }\n\n}\n\nexport default FeedTemp;\n","import React, {Component} from 'react';\nimport {Container, Row, Col} from 'react-grid-system';\nimport {Link, withRouter} from 'react-router-dom';\nimport Select from 'react-select';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faSearch as search} from '@fortawesome/free-solid-svg-icons'\nimport { categoryList, sortOptions, isPaidList } from '../static/constants'\n\n// Components\nimport Feed from '../components/Feed';\nimport FeedTemp from '../components/FeedTemp';\n\nclass Jobs extends Component {\n    state = {\n        listings: [],\n        isPaid: \"\",\n        listCategory: \"\",\n        search: \"\",\n        sort: \"listDeadline\"\n    };\n\n    /*\n     *\n     */\n    UNSAFE_componentWillMount() {\n        try {\n            this.setState({search: this.props.location.state.search});\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    componentDidMount() {\n        this.setState({listings: []});\n        fetch('/api/listings/?format=json&search=' + this.state.search + '&isPaid=' + this.state.isPaid + '&listCategory=' + this.state.listCategory + '&ordering=' + this.state.sort + '&isOpen=true')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({listings: data})\n            })\n            .catch(console.log)\n    }\n\n    handleCategoryChange = (selectedOption) => {\n        this.setState({\n            ...this.state,\n            listCategory: selectedOption.value\n        }, this.componentDidMount);\n    };\n\n    handleSortChange = (selectedOption) => {\n        this.setState({\n            ...this.state,\n            sort: selectedOption.value\n        }, this.componentDidMount);\n    };\n\n    handleIsPaidChange = (selectedOption) => {\n        this.setState({\n            ...this.state,\n            isPaid: selectedOption.value\n        }, this.componentDidMount);\n    };\n\n    search = () => {\n        this.setState({\n            ...this.state,\n            search: document.getElementById('jobs-search-bar').value\n        }, this.componentDidMount)\n    };\n\n    keyPressed(event) {\n        if (event.key === \"Enter\") {\n            document.getElementById(\"search-icon-wrapper\").click();\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div className=\"hero\" id=\"search-hero\">\n                    <div className=\"hero-inner\">\n                        <h1>Look for a job,</h1>\n                        <div id=\"search-bar-wrapper\">\n                            <input type=\"search\" id=\"jobs-search-bar\" defaultValue={this.state.search}\n                                   placeholder=\"Search for a job or internship...\" className=\"search\"\n                                   onKeyPress={this.keyPressed}/>\n                            <button id=\"search-icon-wrapper\" onClick={this.search}>\n                                <FontAwesomeIcon icon={search} style={{\n                                    verticalAlign: 'middle',\n                                    color: '#8e8e8e',\n                                    fontSize: 18 + 'px',\n                                    marginBottom: 4 + 'px'\n                                }}/>\n                            </button>\n                        </div>\n                        <br/>\n                        <span className=\"sub-title\">\n                  <Link to=\"/bookmarks\">My Bookmarks</Link>\n              </span>\n                    </div>\n                </div>\n                <br/>\n                <Container style={{minHeight: \"40vh\"}}>\n                    <Row>\n                        <Col xl={3} lg={4}>\n                            <h2>Filter</h2>\n                            <>\n                                <label className=\"filter-label\">Industry</label>\n                                <Select\n                                    options={categoryList}\n                                    className=\"filter-dropdown\"\n                                    defaultValue={categoryList[0]}\n                                    onChange={this.handleCategoryChange}\n                                    theme={theme => ({\n                                        ...theme,\n                                        borderRadius: \"8px\",\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#eeeeee',\n                                            primary: '#3d5afe',\n                                            primary50: '#e8e8e8',\n                                        },\n                                    })}>\n                                </Select>\n                                <label className=\"filter-label\">Salary</label>\n                                <Select\n                                    options={isPaidList}\n                                    className=\"filter-dropdown\"\n                                    defaultValue={isPaidList[0]}\n                                    onChange={this.handleIsPaidChange}\n                                    theme={theme => ({\n                                        ...theme,\n                                        borderRadius: \"8px\",\n                                        colors: {\n                                            ...theme.colors,\n                                            primary25: '#eeeeee',\n                                            primary: '#3d5afe',\n                                            primary50: '#e8e8e8',\n                                        },\n                                    })}>\n                                </Select>\n                            </>\n                        </Col>\n                        <Col xl={9} lg={8}>\n                            <div className=\"result-header-wrapper\">\n                                <h2>Results</h2>\n                                <div className=\"order-wrapper\">\n                                    <Select\n                                        style={{width: \"100px !important\"}}\n                                        options={sortOptions}\n                                        className=\"filter-dropdown results-sort\"\n                                        defaultValue={sortOptions[0]}\n                                        onChange={this.handleSortChange}\n                                        theme={theme => ({\n                                            ...theme,\n                                            borderRadius: \"8px\",\n                                            colors: {\n                                                ...theme.colors,\n                                                primary25: '#eeeeee',\n                                                primary: '#3d5afe',\n                                                primary50: '#e8e8e8',\n                                            },\n                                        })}>\n                                    </Select>\n                                </div>\n                            </div>\n                            <Feed listings={this.state.listings}/>\n                        </Col>\n                    </Row>\n                </Container>\n            </>\n        )\n    }\n}\n\nexport default withRouter(Jobs);","import React, { Component } from 'react';\nimport { Container } from 'react-grid-system';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport * as axios from 'axios';\n\n// Components\nimport Feed from '../components/Feed';\nimport Select from \"react-select\";\n\nimport { sortOptions } from '../static/constants'\n\nclass Bookmarks extends Component {\n  state = {\n      listings: [],\n      sort: \"listDeadline\"\n  };\n\n  async componentDidMount() {\n      this.setState({listings: []});\n      try {\n          const response = await axios({\n              url: '/api/users/data/bookmarks?format=json&ordering=' + this.state.sort,\n              method: 'GET',\n              headers: {\n                  'Accept': 'application/json',\n                  'Content-Type': 'application/json;charset=UTF-8',\n                  'Authorization': 'Token ' + localStorage.getItem(\"token\")\n              }\n          });\n          const bookmarks = await response.data;\n          this.setState({ listings: bookmarks });\n      } catch (error) {\n          console.error(error);\n          console.error(\"@ERROR: Bookmark Retrieval Error!\");\n      }\n  }\n\n    handleSortChange = (selectedOption) => {\n        this.setState({\n            ...this.state,\n            sort: selectedOption.value\n        }, this.componentDidMount);\n//    console.log(this.state.listCategory);\n    }\n\n  render () {\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect to=\"/login\" />\n      )\n    } else if (this.props.isStartup) {\n      return (\n        <Redirect to=\"/my-listings\" />\n      )\n    }\n      return (\n        <span>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Bookmarks</h1>\n              <span className=\"sub-title\">\n                  <Link to=\"/jobs\">My Applications</Link>&nbsp;\n                  | &nbsp;<Link to=\"/jobs\">Job Search</Link>\n              </span>\n            </div>\n          </div>\n          <br />\n          <Container>\n            <div className=\"result-header-wrapper\">\n                  <h2>Results</h2>\n                  <div className=\"order-wrapper\">\n                    <Select\n                        style={{width: \"100px !important\"}}\n                        options={sortOptions}\n                        className=\"filter-dropdown results-sort\"\n                        defaultValue={sortOptions[0]}\n                        onChange={this.handleSortChange}\n                        theme={theme => ({\n                            ...theme,\n                            borderRadius: \"8px\",\n                            colors: {\n                                ...theme.colors,\n                                primary25: '#eeeeee',\n                                primary: '#3d5afe',\n                                primary50: '#e8e8e8',\n                            },\n                        })}>\n                    </Select>\n                  </div>\n                </div>\n            <Feed listings={this.state.listings} />\n          </Container>\n        </span>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Bookmarks);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope as emailIcon, faGraduationCap as educationIcon, faFile as resumeIcon, faBook as majorIcon, faTools as skillsIcon, faAward as gradeIcon, faPlusCircle as addIcon } from '@fortawesome/free-solid-svg-icons'\n\n/* ------------------------- */\n\nvar loggedInID;\nvar sameUser = false;\n\nconst addListingStyles = {\n    width: \"100%\",\n    backgroundColor: \"#FFFFFF\",\n    position: \"relative\",\n    padding: \"20px\",\n    display: \"block\",\n    borderRadius: \"12px\",\n    height: \"auto\",\n    boxSizing: \"border-box\",\n    color: \"#3d5afe\",\n    textDecoration: 'none',\n    fontSize: \"20px\",\n    marginBottom: \"20px\"\n};\n\nclass Profile extends Component {\n  state = {\n    student: []\n  }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/usr/missing.png';\n  }\n\n  componentDidMount() {\n      fetch('/api/users/' + this.props.userID + '/')\n          .then(res => res.json())\n          .then((data) => {\n              this.setState({ student: data })\n          })\n          .catch(\n              console.log\n          )\n  }\n\n  render () {\n      if (!this.props.isAuthenticated) {\n        return (\n          <Redirect to=\"/login\" />\n        )\n      }\n      return (\n        <>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>{\n                  sameUser ?\n                      (\n                          <>Your </>\n                      ) :\n                      (\n                          <>{this.state.student.firstName}'s </>\n                      )\n                } Profile\n              </h1>\n            </div>\n          </div>\n          <br />\n          <Container id=\"user-profile\">\n            { sameUser &&\n              (<Link id=\"new-listing-button\" style={addListingStyles} to=\"/user-settings/\">\n                <FontAwesomeIcon icon={addIcon}/>\n                 &nbsp; Edit your profile\n                 <div className=\"shadow\" />\n              </Link>)\n            }\n            <Row>\n              <Col md={3} xs={4}>\n                <img id=\"user-profile-image\" src={\"/ggs??.gw\"} onError={this.addDefaultSrc} />\n              </Col>\n              <Col md={9} xs={8} className=\"user-profile-header\">\n                <h1>{this.state.student.firstName + \" \" + this.state.student.lastName}</h1>\n                <p>{this.state.student.userPitch}</p>\n                <Row id=\"stats\">\n                  <Col md={4} sm={12}>\n                    <FontAwesomeIcon icon={educationIcon} /> &nbsp;<strong>Class:</strong>&nbsp; {this.state.student.userDegree}, {this.state.student.userGradYear}\n                    <br />\n                    &nbsp;<FontAwesomeIcon icon={majorIcon} /> &nbsp; <strong>Major:</strong>&nbsp; {this.state.student.userMajor}\n                    <br />\n                    &nbsp;<FontAwesomeIcon icon={gradeIcon} /> &nbsp; <strong>GPA:</strong>&nbsp; {parseFloat(this.state.student.userGPA).toFixed(2)}\n                  </Col>\n                  <Col md={4} sm={12}>\n                    <FontAwesomeIcon icon={emailIcon} /> &nbsp; <a href={\"mailto:\" + this.state.student.email}>{this.state.student.email}</a>\n                    <br />\n                    <FontAwesomeIcon icon={resumeIcon} /> &nbsp;&nbsp; <Link to=\"/usr/files/resume.pdf\">Resume</Link>\n                  </Col>\n                  <Col md={4} sm={12}>\n                    <FontAwesomeIcon icon={skillsIcon} /> &nbsp; <strong>Skills:</strong>&nbsp; {this.state.student.extraCurriculars}\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default withRouter(connect(mapStateToProps)(Profile));\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport * as axios from 'axios';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faExclamationTriangle as errorIcon, faCheckCircle as successIcon } from \"@fortawesome/free-solid-svg-icons\";\n\n/* ------------------------- */\n\nconst date = new Date();\nconst minDate = date.getFullYear() - 1;\nconst maxDate = date.getFullYear() + 9;\n\nclass Settings extends Component {\n  state = {\n\n  };\n\n  resetErrors() {\n    document.getElementById('confirm-password-1').style.borderColor = '';\n    document.getElementById('confirm-password-1').style.backgroundColor = 'inherit';\n    document.getElementById('confirm-password-2').style.borderColor = '';\n    document.getElementById('confirm-password-2').style.backgroundColor = 'inherit';\n    const errorBlocks = document.getElementsByClassName(\"error\");\n    for (let i = 0; i < errorBlocks.length; ++i) {\n      errorBlocks[i].style.display = 'none';\n    }\n  }\n\n  handleUserError() {\n    console.error(\"User Error\");\n  }\n\n  bounce() {\n    this.props.history.push('/login');\n  }\n\n  runResponse(x) {\n    if (x === 1) {\n      document.getElementById('confirm-password-1').style.borderColor = '#ff4444';\n      document.getElementById('confirm-password-1').style.backgroundColor = '#ffe6e6';\n      document.getElementById('update-settings-error').style.display = 'block';\n    } else if (x === 2) {\n      document.getElementById('confirm-password-2').style.borderColor = '#ff4444';\n      document.getElementById('confirm-password-2').style.backgroundColor = '#ffe6e6';\n      document.getElementById('update-profile-error').style.display = 'block';\n    }\n    else if (x === 3) {\n      document.getElementById('update-settings-success').style.display = 'block';\n    }\n    else if (x === 4) {\n      document.getElementById('update-profile-success').style.display = 'block';\n    }\n  }\n\n  async updateSettings() {\n    this.resetErrors();\n    try {\n      const response = await axios({\n        url: '/api/authusers/confirm/',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'Authorization': 'Token ' + localStorage.getItem(\"token\")\n        },\n        data: { \"password\" : document.getElementById(\"confirm-password-1\").value }\n      });\n      const json = await response.data;\n      if (json.isValid) {\n        try {\n          const data = {\n            \"firstName\" : document.getElementById(\"first-name\").value,\n            \"lastName\" : document.getElementById(\"last-name\").value\n          }\n          const profileResponse = await axios({\n            url:' /api/users/' + this.props.user.id + '/update/',\n            method: 'PATCH',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json;charset=UTF-8',\n              'Authorization': 'Token ' + localStorage.getItem(\"token\")\n            },\n            data: data\n          });\n          const userJson = await profileResponse.data;\n          this.props.dispatch({ type: \"UPDATEUSER\", user: userJson });\n          this.runResponse(3);\n        } catch (error) {\n          if (error.response.status === 400) {\n            this.handleUserError();\n          } else if (error.response.status === 401) {\n            this.bounce();\n          } else console.error(error);\n        }\n      } else {\n        this.runResponse(1);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async updateProfile() {\n    this.resetErrors();\n    try {\n      const response = await axios({\n        url: '/api/authusers/confirm/',\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json;charset=UTF-8',\n          'Authorization': 'Token ' + localStorage.getItem(\"token\")\n        },\n        data: { \"password\" : document.getElementById(\"confirm-password-2\").value }\n      });\n      const json = await response.data;\n      if (json.isValid) {\n        try {\n          const data = {\n            \"userPitch\" : document.getElementById(\"bio\").value,\n            \"userMajor\" : document.getElementById(\"major\").value,\n            \"userGPA\" : document.getElementById(\"gpa\").value,\n            \"userGradYear\" : document.getElementById(\"grad-date\").value\n          }\n          const profileResponse = await axios({\n            url:' /api/users/' + this.props.user.id + '/update/',\n            method: 'PATCH',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json;charset=UTF-8',\n              'Authorization': 'Token ' + localStorage.getItem(\"token\")\n            },\n            data: data\n          });\n          // console.log(profileResponse.data);\n          const userJson = await profileResponse.data;\n          // console.log('Success:', JSON.stringify(userJson));\n          this.props.dispatch({ type: \"UPDATEUSER\", user: userJson });\n          this.runResponse(4);\n        } catch (error) {\n          if (error.response.status === 400) {\n            this.handleUserError();\n          } else if (error.response.status === 401) {\n            this.bounce();\n          }\n          else console.error(error);\n        }\n      } else {\n        this.runResponse(2);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/usr/missing.png';\n  }\n\n  render () {\n      if (!this.props.isAuthenticated) {\n        return (\n          <Redirect to=\"/login\" />\n        )\n      } else if (this.props.isStartup) {\n        return (\n          <Redirect to=\"/org-settings\" />\n        )\n      }\n      else return (\n        <>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Your Settings</h1>\n            </div>\n          </div>\n          <br />\n          <Container id=\"user-settings\">\n            <h1>Account Settings</h1>\n            <span id=\"update-settings-error\" className=\"error\" style={{ backgroundColor: '#ff4444' }}><FontAwesomeIcon icon={errorIcon} /> &nbsp; Invalid Credentials</span>\n            <span id=\"update-settings-success\" className=\"error\" style={{ backgroundColor: '#00C851' }}><FontAwesomeIcon icon={successIcon} /> &nbsp; Successful Updated Settings</span>\n            <form onSubmit={(e) => {e.preventDefault(); this.updateSettings()}}>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"first-name\" >First Name:</label></Col>\n                  <Col md={10} sm={12}><input id=\"first-name\" defaultValue={this.props.user.firstName} autoComplete=\"given-name\" minLength=\"1\" pattern=\"[A-Za-z0-9-]+\" maxLength=\"30\" title=\"Enter alphanumeric charcters and hyphens only.\" /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"last-name\">Last Name:</label></Col>\n                  <Col md={10} sm={12}><input id=\"last-name\" defaultValue={this.props.user.lastName} autoComplete=\"family-name\" minLength=\"1\" pattern=\"[A-Za-z0-9- ]+\" maxLength=\"50\" title=\"Enter alphanumeric charcters, hyphens and spaces only.\"/></Col>\n                </Row>\n              {/*}\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"new-email\" >Update Email:</label></Col>\n                  <Col md={10} sm={12}><input id=\"new-email\" type=\"email\" ></input></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"confirm-email\" type=\"email\">Confirm Email:</label></Col>\n                  <Col md={10} sm={12}><input id=\"confirm-email\" type=\"email\" ></input></Col>\n                </Row>\n              {*/}\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"confirm-password-1\">Confirm Password:</label></Col>\n                  <Col md={10} sm={12}><input id=\"confirm-password-1\" type=\"password\" autoComplete=\"current-password\" title=\"Confirm Password to make changes.\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"submit-settings\">Submit Changes</label></Col>\n                  <Col md={10} sm={12}><button id=\"submit-settings\" type=\"submit\">Submit Changes</button></Col>\n                </Row>\n              </form>\n            <hr />\n            <h1>Profile Settings</h1>\n            <span id=\"update-profile-error\" className=\"error\" style={{ backgroundColor: '#ff4444' }}><FontAwesomeIcon icon={errorIcon} /> &nbsp; Invalid Credentials</span>\n            <span id=\"update-profile-success\" className=\"error\" style={{ backgroundColor: '#00C851' }}><FontAwesomeIcon icon={successIcon} /> &nbsp; Successful Updated Profile</span>\n            <form onSubmit={(e) => {e.preventDefault(); this.updateProfile()}}>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"bio\" >Biography (220 characters):</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"bio\" maxLength=\"220\" defaultValue={this.props.user.userPitch} /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"grad-date\" >Graduation Year:</label></Col>\n                  <Col md={10} sm={12}><input id=\"grad-date\" type=\"number\" defaultValue={this.props.user.userGradYear} step=\"1\" min={minDate} max={maxDate} /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"major\">Major:</label></Col>\n                  <Col md={10} sm={12}>\n                    <input id=\"major\" defaultValue={this.props.user.userMajor} minLength=\"1\" pattern=\"[A-Za-z0-9&/ -]+\" title=\"Only use alphanumeric characters and '&', '/' and '-'.\" maxLength=\"50\">\n                    </input>\n                 </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"gpa\" >GPA (Out of 4.00):</label></Col>\n                  <Col md={10} sm={12}><input id=\"gpa\" defaultValue={parseFloat(this.props.user.userGPA).toFixed(2)} type=\"number\" step=\"0.01\" min=\"0\" max=\"4\" /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"skills\" >Skills (seperate each with a comma):</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"skills\" maxLength=\"220\" defaultValue={this.props.user.extraCurriculars} /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"confirm-password-2\">Confirm Password:</label></Col>\n                  <Col md={10} sm={12}><input id=\"confirm-password-2\" type=\"password\" autoComplete=\"current-password\" title=\"Confirm Password to make changes.\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"submit-profile\">Update Profile</label></Col>\n                  <Col md={10} sm={12}><button id=\"submit-profile\" type=\"submit\">Update Profile</button></Col>\n                </Row>\n              </form>\n              <hr />\n              <h1>Upload/Change Avatar</h1>\n              <form>\n                  <Row className=\"setting-row\">\n                    <Col md={2} sm={12}><label htmlFor=\"avatar\" >\n                      Upload A Square PNG:</label>\n                    </Col>\n                    <Col md={10} sm={12}>\n                      <input id=\"avatar\" type=\"file\" name=\"pic\" accept=\".png\" />\n                    </Col>\n                  </Row>\n                  <Row className=\"setting-row\">\n                    <Col md={2} sm={12}><label htmlFor=\"submit-avatar\">Update Avatar</label></Col>\n                    <Col md={10} sm={12}><button id=\"submit-avatar\" type=\"submit\">Update Avatar</button></Col>\n                  </Row>\n                </form>\n          </Container>\n        </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default withRouter(connect(mapStateToProps)(Settings));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { Container } from 'react-grid-system';\n\n// Components\n\n\nclass Dashboard extends Component {\n  state = {\n\n  }\n\n  render () {\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect to=\"/login\"  />\n      )\n    } else if (!this.props.isStartup) {\n      return (\n        <Redirect to=\"/\"  />\n      )\n    }\n    else return (\n        <Container>\n          <h1>{this.props.user.orgName}</h1>\n        </Container>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default withRouter(connect(mapStateToProps)(Dashboard));\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faList as Software } from '@fortawesome/free-solid-svg-icons'\n\n// Components\nimport Feed from '../components/Feed';\n\nconst industryList = [\n    { label: \"Accounting/Finance\", value: \"FIN\" },\n    { label: \"Administrative\", value: \"ADM\" },\n    { label: \"Biotechnology\", value: \"BIO\" },\n    { label: \"Chemical/Materials\", value: \"CHEM\" },\n    { label: \"Data/Analysis\", value: \"DATA\"},\n    { label: \"Engineering\", value: \"ENG\" },\n    { label: \"Health/Medicine\", value: \"MED\" },\n    { label: \"Project Mangement\", value: \"PM\" },\n    { label: \"Marketing/PR\", value: \"PR\" },\n    { label: \"Sales/Business\", value: \"BUS\" },\n    { label: \"Software Development\", value: \"DEV\" },\n    { label: \"Legal\", value: \"LAW\" },\n    { label: \"User Experience/Design\", value: \"UX\" },\n    { label: \"Other\", value: \"MISC\" }\n];\n\nfunction getLabelFromValue(value) {\n    for (const key of Object.keys(industryList)) {\n        if (industryList[key].value === value) {\n            return industryList[key].label;\n        }\n    }\n}\n\nclass OrgProfile extends Component {\n  state = {\n    listings: [],\n    company: []\n  }\n\n    componentDidMount() {\n        fetch('/api/startups/' + this.props.listingID + '/?format=json', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'content-type': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ company: data })\n            })\n            .catch(console.log);\n        fetch('/api/listings/' + this.props.listingID +'/')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ listing: data })\n            })\n            .catch(console.log)\n      fetch('/api/listings/?format=json&listOrgID=' + this.props.listingID)\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ listings: data })\n      })\n      .catch(console.log)\n    }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/org/missing.png';\n  }\n\n  render () {\n      return (\n        <span>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <span className=\"sub-title\">\n                  { this.props.isStartup ? (\n                          <><Link to=\"/my-listings\">My Listings</Link> &nbsp;|&nbsp; <Link to=\"/recruit\"> Recruit a student</Link></>) :\n                      (\n                          <Link to=\"/jobs\">&larr; Back to Job Search</Link>\n                      )\n                  }\n              </span>\n            </div>\n          </div>\n          <br />\n          <Container>\n            <article className=\"job\">\n              <Row className=\"company-profile\">\n                <Col md={2} xs={3}><span className=\"image-wrapper\" ><img onError={this.addDefaultSrc} src={\"/img/org/\" + this.state.company.id + \".png\"} alt={this.props.company} /></span></Col>\n                <Col md={10} xs={9}>\n                  <Link to={this.props.jobPage}><h2 style={{display: \"inline\"}}>{this.state.company.orgName}</h2></Link><br />\n                  <p id=\"company-industry\"><FontAwesomeIcon style={{fontSize: \"14px\"}} icon={Software} /> &nbsp;{getLabelFromValue(this.state.company.orgIndustry)}</p>\n                  <p className=\"sub-title\">\n\n                  </p>\n                  <p>\n                    {this.state.company.orgDesc}\n                  </p>\n                </Col>\n              </Row>\n              <div className=\"shadow\" />\n            </article>\n            <h2>Positions posted by {this.state.company.orgName}:</h2>\n            <Feed listings={this.state.listings} />\n          </Container>\n        </span>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    isAuthenticated: state.isAuthenticated,\n    isStartup: state.isStartup\n});\n\nexport default connect(mapStateToProps)(OrgProfile);","import React, { Component } from 'react';\n\n// Components\nimport { Container } from 'react-grid-system';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Feed from '../components/Feed';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {faCheckCircle as successIcon, faPlusCircle as addIcon} from '@fortawesome/free-solid-svg-icons'\nimport Select from \"react-select\";\n\nconst addListingStyles = {\n    width: \"100%\",\n    backgroundColor: \"#FFFFFF\",\n    position: \"relative\",\n    padding: \"20px\",\n    display: \"block\",\n    borderRadius: \"12px\",\n    height: \"auto\",\n    boxSizing: \"border-box\",\n    color: \"#3d5afe\",\n    textDecoration: 'none',\n    fontSize: \"20px\",\n    marginBottom: \"20px\"\n};\n\nconst sortOptions = [\n    { label: \"Deadline (Earliest)\", value: \"listDeadline\" },\n    { label: \"Deadline (Lastest)\", value: \"-listDeadline\" },\n    { label: \"Name (A - Z)\", value: \"listName\" },\n    { label: \"Name (Z - A)\", value: \"-listName\" }\n];\n\nclass MyListings extends Component {\n  state = {\n      listings: [],\n      sort: \"listDeadline\"\n  }\n\n  componentDidMount() {\n      try {\n          if (this.props.location.state.newListing) {\n              document.getElementById('new-signup-error').style.display = 'block';\n          }\n      } catch (error) {\n\n      }\n    fetch('/api/listings/?format=json&listOrgID=' + this.props.user.id + '&ordering=' + this.state.sort)\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({ listings: data })\n    })\n    .catch(console.log)\n  }\n\n    handleSortChange = (selectedOption) => {\n        this.setState({\n            ...this.state,\n            sort: selectedOption.value\n        }, this.componentDidMount);\n//    console.log(this.state.listCategory);\n    }\n\n  render () {\n    if (!this.props.isAuthenticated) {\n      return (\n        <Redirect to=\"/login\" />\n      )\n    } else if (!this.props.isStartup) {\n      return (\n        <Redirect to=\"/\" />\n      )\n    } else {\n      return (\n        <>\n          <div className=\"hero\" style={{paddingBottom: 12 + \"vh\"}}>\n            <div className=\"hero-inner\">\n              <h1>My Listings</h1>\n              <span className=\"sub-title\">\n                  <Link to=\"/dashboard\">Dashboard</Link>&nbsp;\n                  | &nbsp;<Link to=\"/students\">Recruit a student</Link>\n              </span>\n            </div>\n          </div>\n          <br />\n          <Container>\n                <div className=\"result-header-wrapper\">\n                  <h2>Results</h2>\n                  <div className=\"order-wrapper\">\n                      <Select\n                          style={{width: \"100px !important\"}}\n                          options={sortOptions}\n                          className=\"filter-dropdown results-sort\"\n                          defaultValue={sortOptions[0]}\n                          onChange={this.handleSortChange}\n                          theme={theme => ({\n                              ...theme,\n                              borderRadius: \"8px\",\n                              colors: {\n                                  ...theme.colors,\n                                  primary25: '#eeeeee',\n                                  primary: '#3d5afe',\n                                  primary50: '#e8e8e8',\n                              },\n                          })}>\n                      </Select>\n                  </div>\n                </div>\n              <span id=\"new-signup-error\" className=\"error\" style={{ backgroundColor: '#00C851' }}><FontAwesomeIcon icon={successIcon} /> &nbsp; Account created! Login below </span>\n              <Link id=\"new-listing-button\" style={addListingStyles} to=\"/my-listings/new\">\n                  <FontAwesomeIcon icon={addIcon} />\n                   &nbsp; Create a new listing\n                   <div className=\"shadow\" />\n                </Link>\n                <Feed listings={this.state.listings} />\n          </Container>\n        </>\n      )\n     }\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default connect(mapStateToProps)(MyListings);\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\n\nimport * as axios from 'axios';\n\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignInAlt as loginIcon, faUserPlus as signupIcon, faExclamationTriangle as errorIcon, faCheckCircle as successIcon } from '@fortawesome/free-solid-svg-icons'\nimport { faEyeSlash as hideIcon, faEye as showIcon } from '@fortawesome/free-regular-svg-icons'\n\nlet passMatch = true;\n\nfunction showPass() {\n  const x = document.getElementById(\"user-pass\");\n  if (x.type === \"password\") {\n    x.type = \"text\";\n  } else {\n    x.type = \"password\";\n  }\n}\n\nfunction showSignupPass() {\n  const x = document.getElementById(\"new-user-pass\");\n  const y = document.getElementById(\"confirm-user-pass\");\n  if (x.type === \"password\") {\n    x.type = \"text\";\n    y.type = \"text\";\n  } else {\n    x.type = \"password\";\n    y.type = \"password\";\n  }\n}\n\nclass LogIn extends Component {\n\n  state = {\n\n  }\n\n  resetErrors() {\n    var errorBlocks = document.getElementsByClassName(\"error\");\n    for (var i = 0; i < errorBlocks.length; ++i) {\n      errorBlocks[i].style.display = 'none';\n    }\n  }\n\n  checkPassMatch() {\n    try {\n      if (document.getElementById(\"new-user-pass\").value === document.getElementById(\"confirm-user-pass\").value || document.getElementById(\"confirm-user-pass\").value === \"\") {\n        passMatch = true;\n        document.getElementById('match-confirm-pass').style.display = 'none';\n      } else {\n        passMatch = false;\n        document.getElementById('match-confirm-pass').style.display = 'block';\n      }\n    } catch (error) {\n      passMatch = false;\n      document.getElementById('match-confirm-pass').style.display = 'block';\n    }\n  }\n\n  async postLogin() {\n    this.resetErrors();\n    try {\n      const data = { \"username\" : document.getElementById(\"user-email\").value, \"password\" : document.getElementById(\"user-pass\").value };\n      const response = await axios({\n          url: '/api/auth/login',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8'\n          },\n          data: data\n      });\n      // console.log(response.result);\n      //console.log(data);\n      const json = await response.data;\n      // console.log('Success:', JSON.stringify(json));\n      // console.log(json.user.id);\n      localStorage.setItem(\"token\", json.token);\n      try {\n        const userResponse = await axios({\n            url: '/api/auth/user',\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json;charset=UTF-8',\n              'Authorization': 'Token ' + localStorage.getItem(\"token\")\n            }\n        });\n        // console.log(userResponse.data);\n        const userJson = await userResponse.data;\n        // console.log('Success:', JSON.stringify(userJson));\n        this.props.dispatch({ type: \"LOGIN\", user: userJson, isStartup: json.is_startup })\n        this.props.history.push('/');\n      } catch (error) {\n        console.error(error);\n      }\n    } catch (error) {\n      if (error.response.status === 400) {\n        document.getElementById('user-pass').style.borderColor = '#ff4444';\n        document.getElementById('user-email').style.borderColor = '#ff4444';\n        document.getElementById('user-pass').style.backgroundColor = '#ffe6e6';\n        document.getElementById('user-email').style.backgroundColor = '#ffe6e6';\n        document.getElementById('login-error').style.display = 'block';\n      }\n      else if (error.response.status === 401) {\n        localStorage.removeItem(\"token\");\n        this.props.dispatch({ type: \"LOGOUT\" });\n        this.props.history.push('/login');\n      } else {\n        document.getElementById('server-error').style.display = 'block';\n      }\n    }\n  }\n\n    async registerUser() {\n      if(passMatch) {\n        this.props.history.push({\n          pathname: '/signup',\n          state: {\n            email: document.getElementById(\"new-user-email\").value,\n            password: document.getElementById(\"new-user-pass\").value\n          }\n        })\n      }\n    }\n\n  componentDidMount() {\n    try {\n      if (this.props.location.state.newSignup) {\n        document.getElementById('new-signup-error').style.display = 'block';\n      }\n    } catch (error) {\n      \n    }\n  }\n\n  render () {\n      return (\n        <>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Login to an existing account.</h1>\n              <span className=\"sub-title\">\n                  <Link to=\"/login#signup-col\">Not a member? Create an account.</Link>\n              </span>\n            </div>\n          </div>\n          <Container className=\"login-portal\">\n            <Row>\n              <Col lg={5.75}>\n                <h1>Login</h1>\n                <span id=\"login-error\" className=\"error\" style={{ backgroundColor: '#ff4444' }}><FontAwesomeIcon icon={errorIcon} /> &nbsp; Invalid Login Credentials</span>\n                <span id=\"server-error\" className=\"error\" style={{ backgroundColor: '#ffbb33' }}><FontAwesomeIcon icon={errorIcon} /> &nbsp; Server Error. Please Try again </span>\n                <span id=\"new-signup-error\" className=\"error\" style={{ backgroundColor: '#00C851' }}><FontAwesomeIcon icon={successIcon} /> &nbsp; Account created! Login below </span>\n                <form onSubmit={(e) => {e.preventDefault(); this.postLogin()}}>\n                  <label className={\"text-input-label\"} htmlFor=\"user-email\" >Email:</label>\n                  <input id=\"user-email\" className={\"input-text\"}  type=\"email\" autoComplete=\"username\" defaultValue=\"\" required />\n                  <label className=\"text-input-label\" htmlFor=\"user-pass\" >Password:</label>\n                  <input id=\"user-pass\" className={\"input-text\"} type=\"password\" autoComplete=\"current-password\" defaultValue=\"\" required />\n                  <div id=\"remember-me-wrapper\">\n                    {/*}<input type=\"checkbox\" id=\"remember-me\"></input><label htmlFor=\"remember-me\">&nbsp;Keep me logged in</label>{*/}\n                    <input type=\"checkbox\" id=\"show-pass\" onClick={showPass} />\n                    <label htmlFor=\"show-pass\" id=\"show-label\">\n                      <FontAwesomeIcon icon={showIcon} id=\"show-icon\" />\n                      <FontAwesomeIcon icon={hideIcon} id=\"hide-icon\" />\n                      &nbsp;Show Password\n                    </label>\n                  </div>\n                  <button type=\"submit\" ><FontAwesomeIcon icon={loginIcon} />&nbsp; Login</button>\n                </form>\n              </Col>\n              <Col lg={0.5}>\n                <div className=\"divider\"/>\n              </Col>\n              <Col lg={5.75} id=\"signup-col\">\n                <h1>Signup</h1>\n                <form onSubmit={(e) => {e.preventDefault(); this.registerUser()}}>\n                  <label className=\"text-input-label\" htmlFor=\"new-user-email\" >Account Email:</label>\n                  <input id=\"new-user-email\" className=\"input-text\" type=\"email\" required/>\n                  <label className=\"text-input-label\" htmlFor=\"new-user-pass\" >Create a Password:<br></br><span style={{fontSize: \"14px\"}}>(8 or more characters in length containing a number, uppercase and lowercase letter)</span></label>\n                  <input id=\"new-user-pass\" className=\"input-text\" type=\"password\" required autoComplete=\"new-password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Passwords must contain a number, an uppercase letter and a lowercase letter and must be 8 characters long\" />\n                  <label className=\"text-input-label\" htmlFor=\"confirm-user-pass\" >Confirm Password: <span id=\"match-confirm-pass\" className=\"error\" style={{display: 'none', backgroundColor: '#ff4444', marginTop: '8px'}}><FontAwesomeIcon icon={errorIcon} ></FontAwesomeIcon> &nbsp; Passwords do not match!</span></label>\n                  <input id=\"confirm-user-pass\" className=\"input-text\" type=\"password\" required autoComplete=\"new-password\" onChange={this.checkPassMatch} pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Passwords must contain a number, an uppercase letter and a lowercase letter and must be 8 characters long\" />\n                  <div id=\"remember-me-wrapper\">\n                    <input type=\"checkbox\" id=\"show-signup-pass\" onClick={showSignupPass}/>\n                    <label htmlFor=\"show-signup-pass\" id=\"show-signup-label\">\n                      <FontAwesomeIcon icon={showIcon} id=\"show-signup-icon\"/>\n                      <FontAwesomeIcon icon={hideIcon} id=\"hide-signup-icon\"/>\n                      &nbsp;Show Password\n                    </label>\n                  </div>\n                  <button type=\"submit\"><FontAwesomeIcon icon={signupIcon} />&nbsp; Signup</button>\n                </form>\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )\n\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated\n});\n\nexport default withRouter(connect()(LogIn));\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { Link } from 'react-router-dom';\n\nexport default class Error extends Component {\n  state = {\n  }\n\n  render () {\n      return (\n        <span>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Error 404</h1>\n            </div>\n          </div>\n          <br />\n          <Container>\n            <Row>\n              <Col md={6}>\n                <div style={{fontSize: '80px'}}><strong>ERROR 404</strong> <br></br> <Link to=\"/\">Back to<br></br> home &rarr;</Link></div>\n              </Col>\n              <Col md={6}>\n                <img src=\"https://media.giphy.com/media/jWexOOlYe241y/giphy.gif\" alt=\"\" />\n              </Col>\n            </Row>\n          </Container>\n        </span>\n      )\n   }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport * as axios from 'axios';\nimport Select from 'react-select';\nimport { withRouter } from 'react-router-dom';\n\n/* ------------------------- */\n\nconst Req = () => {\n  return <span className=\"req\" />\n};\n\n// var profileImage = \"\";\n// var firstName = \"Siraj\";\n// var lastName = \"Chokshi\"\n// var studentPitch = \"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\";\n// var studentEmail = \"sirajchokshi@gmail.com\";\n// var gpa = 3;\n// var gradDate = 2023;\n// var major = \"Psychology\";\n// var skills = \"Web Development, Illustrator, Photoshop, CSS, JavaScript, C#, User Interface, User Experience, Graphic Design\";\n// var date = new Date();\n\nvar d = new Date();\nvar minDate  = d.getFullYear() + \"-\" + d.getMonth() + \"-\" + ('0' + (d.getDay())).slice(-2);\nvar maxDate  = (d.getFullYear() + 1) + \"-\" + d.getMonth() + \"-\" + ('0' + (d.getDay())).slice(-2);\n\nconst categoryList = [\n  { label: \"Accounting/Finance\", value: \"FIN\" },\n  { label: \"Administrative\", value: \"ADM\" },\n  { label: \"Biotechnology\", value: \"BIO\" },\n  { label: \"Chemical/Materials\", value: \"CHEM\" },\n  { label: \"Data/Analysis\", value: \"DATA\"},\n  { label: \"Engineering\", value: \"ENG\" },\n  { label: \"Health/Medicine\", value: \"MED\" },\n  { label: \"Project Mangement\", value: \"PM\" },\n  { label: \"Marketing/PR\", value: \"PR\" },\n  { label: \"Sales/Business\", value: \"BUS\" },\n  { label: \"Software Development\", value: \"DEV\" },\n  { label: \"Legal\", value: \"LAW\" },\n  { label: \"User Experience/Design\", value: \"UX\" },\n  { label: \"Other\", value: \"MISC\" }\n];\n\nclass NewListing extends Component {\n  state = {\n    listCategory: \"\"\n  }\n\n  async postListing() {\n    try {\n      const data = {\n        \"listName\" : document.getElementById(\"listing-title\").value,\n        \"listDesc\" : document.getElementById(\"short-desc\").value,\n        \"listLongDesc\" : document.getElementById(\"long-desc\").value,\n        \"listLocation\" : document.getElementById(\"location\").value,\n        \"listDeadline\" : document.getElementById(\"deadline\").value,\n        \"externalLink\" : document.getElementById(\"app-url\").value,\n        \"listCategory\": this.state.listCategory,\n        \"isOpen\": true,\n        \"isPaid\": true\n      };\n      const response = await axios({\n          url: '/api/listings/manage/add/',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Authorization': 'Token ' + localStorage.getItem(\"token\")\n          },\n          data: data\n      });\n      // console.log(response.result);\n      //console.log(data);\n      const json = await response.data;\n      console.log('Success:', JSON.stringify(json));\n      this.props.history.push({\n        pathname: '/my-listings',\n        state: {\n          newListing: true\n        }\n      })\n    } catch (error) {\n//      console.clear();\n//       if (error.response.status === 400) {\n//         console.error(error)\n//       }\n//       else console.error('NOT 400: OTHER ERROR')\n      console.error(error);\n    }\n  }\n\n  handleCategoryChange = (selectedOption) => {\n    this.setState({\n      ...this.state,\n      listCategory: selectedOption.value\n    });\n  }\n\n  render () {\n      return (\n        <>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Create a new listing</h1>\n            </div>\n          </div>\n          <br />\n\n          <Container id=\"user-settings\">\n            <h1>Listing Information</h1>\n            <p><i><Req /> = Required Field</i></p>\n              <form  onSubmit={(e) => {e.preventDefault(); this.postListing()}}>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"listing-title\" >Position Title<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"listing-title\" placeholder=\"Ex. Public Relations Intern\" autoComplete=\"organization-title\" minLength=\"3\" maxLength=\"50\" title=\"Enter alphanumeric charcters and hyphens only.\" /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"short-desc\" >Short Description (160 characters)<Req />:</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"short-desc\" maxLength=\"160\" placeholder=\"\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"app-url\" >Application URL<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"app-url\" placeholder=\"Ex. https://mycompany.com/jobs?id=0\" type=\"url\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"category\">Job Category<Req />:</label></Col>\n                  <Col md={10} sm={12}>\n                    <Select\n                      options={categoryList}\n                      className=\"filter-dropdown\"\n                      onChange={this.handleCategoryChange}\n                      defaultValue={categoryList[13]}\n                      theme={theme => ({\n                       ...theme,\n                       borderRadius: \"8px\",\n                       colors: {\n                         ...theme.colors,\n                         primary25: '#eeeeee',\n                         primary: '#3d5afe',\n                         primary50: '#e8e8e8',\n                       },\n                      })}>\n                    </Select>\n                  </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"location\">Location<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"location\" placeholder=\"Ex. Champaign, IL\" autoComplete=\"\" minLength=\"1\" maxLength=\"50\" title=\"Enter alphanumeric charcters, hyphens and spaces only.\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"deadline\">Deadline<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"deadline\" min={minDate} max={maxDate} type=\"date\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"long-desc\" >Full Description<Req />:</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"long-desc\" minLength=\"100\" maxLength=\"7500\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"create-listing\">Create Listing:</label></Col>\n                  <Col md={10} sm={12}><button id=\"create-listing\" type=\"submit\">Create Listing</button></Col>\n                </Row>\n              </form>\n          </Container>\n        </>\n      )\n   }\n}\n\nexport default withRouter(NewListing);","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt as appIcon, faMapMarkerAlt as locationIcon, faBriefcase as jobCategoryIcon, faList as Software, faEdit as editIcon } from '@fortawesome/free-solid-svg-icons'\nimport { faClock as deadlineIcon } from '@fortawesome/free-regular-svg-icons'\n\nimport { categoryList } from '../static/constants'\n\n// Components\n\nfunction getLabelFromValue(value) {\n  for (const key of Object.keys(categoryList)) {\n      if (categoryList[key].value === value) {\n        return categoryList[key].label;\n      }\n  }\n}\n\nclass JobPage extends Component {\n  state = {\n    listing: [],\n    company: []\n  }\n\n  componentDidMount() {\n      console.log(this.props.listingID);\n      fetch('/api/listings/' + this.props.listingID + '/')\n          .then(res => res.json())\n          .then((data) => {\n              this.setState({ listing: data })\n              // console.log(this.state.listing.listLongDesc)\n          })\n          .then(() => {\n              fetch('/api/startups/' + this.state.listing.listOrgID + '/?format=json', {\n                  method: 'GET',\n                  headers: {\n                      'Accept': 'application/json',\n                      'content-type': 'application/json',\n                      'Authorization': 'Token ' + localStorage.getItem(\"token\")\n                  }\n              })\n                  .then(res => res.json())\n                  .then((data) => {\n                      this.setState({ company: data })\n                  })\n                  .catch(console.log)\n            })\n          .catch(\n              console.log\n          )\n    }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/org/missing.png';\n  }\n\n  render () {\n      if (!this.props.isAuthenticated) {\n        return (\n          <Redirect to=\"/login\" />\n        )\n      }\n      return (\n        <span>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <span className=\"sub-title\">\n                  <Link to=\"/jobs\">&larr; Back to Job Search</Link>\n              </span>\n            </div>\n          </div>\n          <br />\n          <Container>\n            <article className=\"job\">\n              <Row>\n                <Col md={8}>\n                  <h1>{this.state.listing.listName}</h1>\n                  <p id=\"industry\">\n                    <FontAwesomeIcon icon={jobCategoryIcon} /> &nbsp; {getLabelFromValue(this.state.listing.listCategory)} &nbsp;\n                    &mdash; &nbsp;<FontAwesomeIcon icon={locationIcon} /> &nbsp; {this.state.listing.listLocation} &nbsp;\n                    &mdash; &nbsp;<FontAwesomeIcon icon={deadlineIcon} /> &nbsp; February, 8th 2019\n                  </p>\n                </Col>\n                <Col md={4} id=\"top-apply-button\" >\n                  <div className=\"button-wrapper\" style={{marginTop: \"15px\", textAlign: \"right\"}}>\n                    { this.props.isStartup ?\n                      (\n                        <Link className=\"button\" to={\"/my-listings/edit/\" + this.props.listingID} >\n                          Edit\n                          &nbsp; <FontAwesomeIcon icon={editIcon} />\n                        </Link>\n                      ) : (\n                        <a href={this.state.listing.externalLink} rel=\"noopener\" target=\"_blank\" className=\"button\" >\n                          Apply <span className=\"hide-ext\">Externally </span>&nbsp; <FontAwesomeIcon icon={appIcon} />\n                        </a>\n                      )}\n                  </div>\n                </Col>\n              </Row>\n              <h2>About This Position</h2>\n              <p id=\"job-desc\" style={{whiteSpace: \"pre-line\"}}>{this.state.listing.listLongDesc}</p>\n              <div className=\"button-wrapper\">\n                { this.props.isStartup && this.state.company.id === this.props.user.id ?\n                (\n                  <Link className=\"button\" to={\"/my-listings/edit/\" + this.props.listingID} >\n                    Edit\n                    &nbsp; <FontAwesomeIcon icon={editIcon} />\n                  </Link>\n                ) : (\n                  <a href={this.state.listing.externalLink} rel=\"noopener\" target=\"_blank\" className=\"button\">Apply <span className=\"hide-ext\">Externally </span>&nbsp; <FontAwesomeIcon icon={appIcon} /></a>\n                )}\n              </div>\n              <br />\n              <hr />\n              <br />\n              <Row className=\"company-profile\">\n                <Col md={2} xs={3}><Link className=\"image-wrapper\" to={\"/org/\" + this.state.company.id}><img onError={this.addDefaultSrc} src={\"/img/org/\" + this.state.company.id + \".png\"} alt={this.state.company.orgName} /></Link></Col>\n                <Col md={10} xs={9}>\n                  <Link to={this.props.jobPage}><h2 style={{display: \"inline\"}}>{this.state.company.orgName} <span className=\"hide-pipe\">|</span></h2> <p id=\"company-industry\"><FontAwesomeIcon style={{fontSize: \"14px\"}} icon={Software} /> &nbsp;{getLabelFromValue(this.state.company.orgIndustry)}</p></Link>\n                  <p className=\"sub-title\">\n\n                  </p>\n                  <p>\n                    {this.state.company.orgDesc}\n                  </p>\n                  <div className=\"button-wrapper\">\n                    <Link to={\"/org/\" + (this.state.listing.listOrgID)} className=\"button\">\n                      {this.props.isStartup ? (<>My Profile</>) : (<><span id=\"hide-full-company-button\">Other positions from </span>{this.state.company.orgName}</>)}\n                       &nbsp; <FontAwesomeIcon icon={appIcon} /></Link>\n                  </div>\n                </Col>\n              </Row>\n              <div className=\"shadow\" />\n            </article>\n          </Container>\n        </span>\n      )\n   }\n}\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default withRouter(connect(mapStateToProps)(JobPage));\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport Select from 'react-select';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUserPlus as signupIcon, faExclamationTriangle as errorIcon } from '@fortawesome/free-solid-svg-icons'\nimport { faEyeSlash as hideIcon, faEye as showIcon } from '@fortawesome/free-regular-svg-icons'\n\nimport { degreeList } from '../static/constants'\n\n\n/* ------------------------- */\n\nconst Req = () => {\n  return <span className=\"req\" />\n};\n\nconst date = new Date();\nconst minDate = date.getFullYear() - 1;\nconst maxDate = date.getFullYear() + 9;\n\nlet successfulRegister = true;\n\nlet passMatch = true;\n\nfunction printSkills(x) {\n  if (x.length < 1) return \"\";\n  let out = x[0] + \"\";\n  let i = 1;\n  while (i < x.length) {\n    out += \", \" + x[i];\n    i = i + 1;\n  }\n  return out;\n}\n\nfunction showSignupPass() {\n  let x = document.getElementById(\"new-user-pass\");\n  let y = document.getElementById(\"confirm-user-pass\");\n  if (x.type === \"password\") {\n    x.type = \"text\";\n    y.type = \"text\";\n  } else {\n    x.type = \"password\";\n    y.type = \"password\";\n  }\n}\n\nclass InitAccount extends Component {\n  constructor(props) {\n    super(props)\n  }\n  state = {\n    degree: \"\",\n    email: \"\",\n    password: \"\"\n  }\n\n  componentWillMount() {\n    try {\n      this.setState({ email : this.props.location.state.email });\n      this.setState({ password : this.props.location.state.password });\n    } catch (error) {\n      console.log(\"State not set!\")\n    }\n  }\n\n  checkPassMatch() {\n    try {\n      if (document.getElementById(\"new-user-pass\").value === document.getElementById(\"confirm-user-pass\").value || document.getElementById(\"confirm-user-pass\").value === \"\") {\n        passMatch = true;\n        document.getElementById('match-confirm-pass').style.display = 'none';\n      } else {\n        passMatch = false;\n        document.getElementById('match-confirm-pass').style.display = 'block';\n      }\n    } catch (error) {\n      passMatch = false;\n      document.getElementById('match-confirm-pass').style.display = 'block';\n    }\n  }\n\n  async registerUser() {\n    try {\n      if (this.state.degree === \"\") throw \"badDegree\";\n      //if (this.state.degree == \"\") throw \"badGradYear\";\n\n      const data = { \"username\" : document.getElementById(\"new-user-email\").value, \"email\" : document.getElementById(\"new-user-email\").value, \"password\" : document.getElementById(\"new-user-pass\").value };\n      const response = await fetch('api/auth/register', {\n        method: 'POST',\n        body: JSON.stringify(data),\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n      console.log(data);\n      const json = await response.json();\n      console.log('Success:', JSON.stringify(json));\n      const userData = {\n        \"firstName\" : document.getElementById(\"first-name\").value,\n        \"lastName\" : document.getElementById(\"last-name\").value,\n        \"email\" : document.getElementById(\"new-user-email\").value,\n        \"dateOfBirth\" : document.getElementById(\"date-of-birth\").value,\n        \"userMajor\" : document.getElementById(\"major\").value,\n        \"userGPA\" : document.getElementById(\"gpa\").value,\n        \"userDegree\" : this.state.degree,\n        \"userPitch\" : document.getElementById(\"bio\").value,\n        \"extraCurriculars\" : document.getElementById(\"skills\").value,\n        \"userBookmarks\" : \"\"\n      };\n      const userResponse = await fetch('api/users/', {\n        method: 'POST',\n        body: JSON.stringify(userData),\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n      console.log(userData);\n      const userJson = await userResponse.json();\n      console.log('Success:', JSON.stringify(userJson));\n      if (successfulRegister) {\n        this.props.history.push({\n          pathname: '/login',\n          state: {\n            newSignup: true\n          }\n        })\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      successfulRegister = false;\n    }\n  }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/usr/missing.png';\n  }\n\n  handleCategoryChange = (selectedOption) => {\n    this.setState({\n      ...this.state,\n      degree: selectedOption.value\n    });\n  }\n\n  render () {\n    if (this.props.isAuthenticated) {\n      return (\n          <Redirect to=\"/\" />\n      )\n    }\n    else return (\n        <>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Setup Your Account</h1>\n            </div>\n          </div>\n          <br />\n          <Container id=\"init-account\">\n            <h1>Account Configuration</h1>\n            <p><i><Req /> = Required Field</i></p>\n              <form onSubmit={(e) => {e.preventDefault(); this.registerUser()}}>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label className=\"text-input-label\" htmlFor=\"new-user-email\" >Account Email<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"new-user-email\" defaultValue={this.state.email} className=\"input-text\" type=\"email\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label className=\"text-input-label\" htmlFor=\"new-user-pass\" >Create a Password<Req />:<br></br><span style={{fontSize: \"14px\"}}>(8 or more characters in length containing a number, uppercase and lowercase letter)</span></label></Col>\n                  <Col md={10} sm={12}><input id=\"new-user-pass\" className=\"input-text\" defaultValue={this.state.password} type=\"password\" required autoComplete=\"new-password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Passwords must contain a number, an uppercase letter and a lowercase letter and must be 8 characters long\" /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label className=\"text-input-label\" htmlFor=\"confirm-user-pass\" >Confirm Password<Req />: <span id=\"match-confirm-pass\" className=\"error\" style={{display: 'none', backgroundColor: '#ff4444', marginTop: '8px'}}><FontAwesomeIcon icon={errorIcon} /> &nbsp; Passwords do not match!</span></label></Col>\n                  <Col md={10} sm={12}>\n                    <input id=\"confirm-user-pass\" className=\"input-text\" type=\"password\" onChange={this.checkPassMatch} required autoComplete=\"new-password\" pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" title=\"Passwords must contain a number, an uppercase letter and a lowercase letter and must be 8 characters long\" />\n                    <div id=\"remember-me-wrapper\">\n                      <input type=\"checkbox\" id=\"show-signup-pass\" onClick={showSignupPass} />\n                      <label htmlFor=\"show-signup-pass\" id=\"show-signup-label\">\n                        <FontAwesomeIcon icon={showIcon} id=\"show-signup-icon\" />\n                        <FontAwesomeIcon icon={hideIcon} id=\"hide-signup-icon\" />\n                        &nbsp;Show Password\n                      </label>\n                    </div>\n                  </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"first-name\">First Name<Req />:</label></Col>\n                  <Col md={10} sm={12}>\n                    <input id=\"first-name\" minLength=\"1\" pattern=\"[A-Za-z0-9 -]+\" title=\"Only use alphanumeric characters and ' '' and '-'.\" autoComplete=\"given-name\" maxLength=\"50\" required>\n                    </input>\n                 </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                   <Col md={2} sm={12}><label htmlFor=\"last-name\">Last Name<Req />:</label></Col>\n                   <Col md={10} sm={12}>\n                     <input id=\"last-name\" minLength=\"1\" pattern=\"[A-Za-z0-9 -]+\" title=\"Only use alphanumeric characters and ' '' and '-'.\" maxLength=\"50\" autoComplete=\"family-name\" required>\n                     </input>\n                </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"date-of-birth\">Date of Birth<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"date-of-birth\" defaultValue=\"1990-05-05\" type=\"date\" autoComplete=\"bday\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"bio\" >Biography (Describe yourself as a job candidate within 220 characters)<Req />:</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"bio\" maxLength=\"220\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"grad-date\" >Graduation Year<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"grad-date\" type=\"number\" step=\"1\" min={minDate} max={maxDate} required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"major\">Major<Req />:</label></Col>\n                  <Col md={10} sm={12}>\n                    <input id=\"major\" minLength=\"1\" pattern=\"[A-Za-z0-9&/ -]+\" title=\"Only use alphanumeric characters and '&', '/' and '-'.\" maxLength=\"50\" required>\n                    </input>\n                 </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"major\">Degree<Req />:</label></Col>\n                  <Col md={10} sm={12}>\n                    <Select\n                      options={degreeList}\n                      className=\"filter-dropdown\"\n                      onChange={this.handleCategoryChange}\n                      theme={theme => ({\n                       ...theme,\n                       borderRadius: \"8px\",\n                       colors: {\n                         ...theme.colors,\n                         primary25: '#eeeeee',\n                         primary: '#3d5afe',\n                         primary50: '#e8e8e8',\n                       },\n                      })}>\n                    </Select>\n                 </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"gpa\" >GPA (Out of 4.00)<Req />:</label></Col>\n                  <Col md={10} sm={12}><input id=\"gpa\" type=\"number\" step=\"0.01\" min=\"0\" max=\"4\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"skills\" >Skills (seperate each with a comma)<Req />:</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"skills\" maxLength=\"60\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"submit-profile\">Create Account</label></Col>\n                  <Col md={10} sm={12}><button id=\"submit-profile\" type=\"submit\"><FontAwesomeIcon icon={signupIcon} />&nbsp; Create Account</button></Col>\n                </Row>\n              </form>\n          </Container>\n        </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated\n});\n\nexport default withRouter(connect(mapStateToProps)(InitAccount));\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExternalLinkAlt as appIcon, faGraduationCap as gradIcon, faBook as majorIcon } from '@fortawesome/free-solid-svg-icons'\n\nclass Listing extends Component {\n  state = {\n\n  }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/usr/missing.png';\n  }\n\n  render () {\n      return (\n        <div className=\"student-card\">\n          <div className=\"top-background\" >\n            <Link className=\"image-wrapper\" to={\"/user-profile/\" + this.props.id}>\n              <img onError={this.addDefaultSrc} src={this.props.logo} alt={this.props.userName} />\n            </Link>\n            <Link to={this.props.jobPage} className=\"name\"><h2>{this.props.userName}</h2></Link>\n          </div>\n          <div className=\"underlay-block\" >\n            <p className=\"info-head\">\n              &nbsp;<FontAwesomeIcon icon={majorIcon} /> &nbsp; {this.props.userMajor}<br />\n            <FontAwesomeIcon icon={gradIcon} /> &nbsp;{this.props.gradYear}\n            </p>\n          </div>\n          <div className=\"inf\">\n            <p>\n              {this.props.bio}\n              &nbsp;<Link to={this.props.jobPage} className=\"read-more\">Read more...</Link>\n            </p>\n              <Link to={this.props.jobPage} className=\"button\">\n                View Profile &nbsp;\n                <FontAwesomeIcon icon={appIcon} />\n              </Link>\n          </div>\n          <div style={{clear: \"both\"}} />\n          <div className=\"shadow\" />\n        </div>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated\n});\n\nexport default connect(mapStateToProps)(Listing);\n","import React, { Component } from 'react';\n\n// Components\nimport Listing from '../components/StudentCard';\n\nvar errorMessage = \"End of results\";\nvar feedLength = -1;\n\nexport default class Feed extends Component {\n  state = {\n\n  }\n\n  render() {\n      if (this.props.feedLength > this.props.listings.length) {\n        feedLength = this.props.listings.length;\n      } else {\n        feedLength = this.props.feedLength;\n      }\n\n      return (\n        <>\n          {this.props.listings.slice(0, feedLength).map(post => (\n            <Listing\n              userName={post.firstName + \" \" + post.lastName}\n              userMajor={post.userMajor}\n              bio={post.userPitch}\n              gradYear={post.userGradYear}\n              logo={\"/img/usr/\" + post.id + \".png\"}\n              jobPage={\"/user-profile/\" + post.id}\n              id={post.id}\n            />\n          )\n          )\n          }\n\n          <p style={{fontSize: \"22px\", color: \"#8e8e8e\"}}>{errorMessage}</p>\n        </>\n      )\n    }\n}\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { Link, Redirect } from 'react-router-dom';\nimport Select from 'react-select';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch as search } from '@fortawesome/free-solid-svg-icons'\nimport { studentSortOptions } from '../static/constants'\nimport { connect } from 'react-redux'\n\n\n// Components\nimport Feed from '../components/StudentFeed';\n\nclass Students extends Component {\n  state = {\n    users: [],\n    minGPA: 0,\n    search: \"\",\n    sort: \"id\"\n  }\n\n  componentDidMount() {\n      this.setState({ users: [] });\n      fetch('/api/users/?format=json&search=' + this.state.search + '&ordering=' + this.state.sort + '&userGPA__gte=' + this.state.minGPA + '&isOpen=true' )\n      .then(res => res.json())\n      .then((data) => {\n        this.setState({ users: data })\n      })\n      .catch(console.log)\n    }\n\n  handleSortChange = (selectedOption) => {\n    this.setState({\n      ...this.state,\n      sort: selectedOption.value\n    }, this.componentDidMount);\n//    console.log(this.state.listCategory);\n  }\n\n  handleGPAFilterChange = () => {\n        this.setState({\n            ...this.state,\n            minGPA: parseFloat(document.getElementById('gpa-filter').value).toFixed(2) - 0.00\n        }, this.componentDidMount);\n//    console.log(this.state.listCategory);\n    }\n\n  search = () => {\n    this.setState({\n      ...this.state,\n      search: document.getElementById('jobs-search-bar').value\n    }, this.componentDidMount)\n  }\n\n  keyPressed(event) {\n    if (event.key === \"Enter\") {\n      document.getElementById(\"search-icon-wrapper\").click();\n    }\n  }\n\n  render () {\n      if (!this.props.isAuthenticated ) {\n          return (\n              <Redirect to=\"/login\" />\n          )\n      }\n      else if (!this.props.isStartup) {\n          return (\n              <Redirect to=\"/jobs\" />\n          )\n      }\n      else return (\n        <>\n          <div className=\"hero\" id=\"search-hero\">\n            <div className=\"hero-inner\">\n              <h1>Find the perfect candidate,</h1>\n                <div id=\"search-bar-wrapper\">\n                   <input type=\"search\" id=\"jobs-search-bar\" placeholder=\"Search for a skill, major or qualification...\" className=\"search\" onKeyPress={this.keyPressed} />\n                     <button id=\"search-icon-wrapper\" onClick={this.search} >\n                       <FontAwesomeIcon icon={search} style={{verticalAlign: 'middle', color: '#8e8e8e', fontSize: 18 + 'px', marginBottom: 4 + 'px'}} />\n                     </button>\n                </div>\n              <br />\n              <span className=\"sub-title\">\n                  <Link to=\"/dashboard\">Dashboard</Link> &nbsp;|&nbsp; <Link to=\"/my-listings\">My Listings</Link>\n              </span>\n            </div>\n          </div>\n          <br />\n          <Container>\n            <Row>\n              <Col xl={3} lg={4}>\n                <h2>Filter</h2>\n                   <label className=\"filter-label\" htmlFor=\"gpa-filter\" >Minimum GPA</label>\n                   <input className=\"filter-input\" id=\"gpa-filter\" defaultValue={parseFloat(0.00).toFixed(2)} type=\"number\" step=\"0.01\" min=\"0\" max=\"4\" onChange={this.handleGPAFilterChange} />\n              </Col>\n              <Col xl={9} lg={8}>\n                <div className=\"result-header-wrapper\">\n                  <h2>Results</h2>\n                  <div className=\"order-wrapper\">\n                    <Select\n                      style={{width: \"100px !important\"}}\n                      options={studentSortOptions}\n                      className=\"filter-dropdown results-sort\"\n                      defaultValue={studentSortOptions[0]}\n                      onChange={this.handleSortChange}\n                      theme={theme => ({\n                       ...theme,\n                       borderRadius: \"8px\",\n                       colors: {\n                         ...theme.colors,\n                         primary25: '#eeeeee',\n                         primary: '#3d5afe',\n                         primary50: '#e8e8e8',\n                       },\n                     })}>\n                    </Select>\n\n                  </div>\n                </div>\n                <Feed listings={this.state.users} /> {/* FIND CAUSE OF USER REPLACEMENT HERE */}\n              </Col>\n            </Row>\n          </Container>\n        </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.user,\n    isAuthenticated: state.isAuthenticated,\n    isStartup: state.isStartup\n});\n\nexport default connect(mapStateToProps)(Students);","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport * as axios from 'axios';\nimport Select from 'react-select';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport {connect} from \"react-redux\";\n\nimport { categoryList } from '../static/constants'\n\n/* ------------------------- */\n\nconst d = new Date();\nconst minDate  = d.getFullYear() + \"-\" + d.getMonth() + \"-\" + ('0' + (d.getDay())).slice(-2);\nconst maxDate  = (d.getFullYear() + 1) + \"-\" + d.getMonth() + \"-\" + ('0' + (d.getDay())).slice(-2);\n\nclass EditListing extends Component {\n  state = {\n    listCategory: \"\",\n    listing: []\n  }\n\n  UNSAFE_componentWillMount() {\n    fetch('/api/listings/' + this.props.listingID + '/?format=json', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'content-type': 'application/json'\n      }\n    })\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ listing: data })\n        })\n        .catch(console.log)\n    /* Get this listing */\n  }\n\n  async updateListing() {\n    try {\n      const data = {\n        \"listName\" : document.getElementById(\"listing-title\").value,\n        \"listDesc\" : document.getElementById(\"short-desc\").value,\n        \"listLongDesc\" : document.getElementById(\"long-desc\").value,\n        \"listDeadline\" : document.getElementById(\"deadline\").value,\n        \"listLocation\" : document.getElementById(\"location\").value,\n        \"externalLink\" : document.getElementById(\"app-url\").value,\n        \"listCategory\": this.state.listCategory\n      };\n      const response = await axios({\n          url: '/api/listings/' + this.props.listingID + '/update/',\n          method: 'PATCH',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Authorization': 'Token ' + localStorage.getItem(\"token\")\n          },\n          data: data\n      });\n      console.log(response.result);\n      //console.log(data);\n      const json = await response.data;\n      console.log('Success:', JSON.stringify(json));\n    } catch (error) {\n//      console.clear();\n      if (error.response.status === 400) {\n        console.error(error)\n      }\n      else if (error.response.status === 401) {\n        this.props.history.push({\n          pathname: '/login',\n        })\n      }\n      else if (error.response.status === 403) {\n        if (this.props.isStartup) {\n          this.props.history.push({\n            pathname: '/my-listings',\n          })\n        }\n        else {\n          this.props.history.push({\n            pathname: '/',\n          })\n        }\n      }\n      else console.error('NOT 400: OTHER ERROR')\n    }\n  }\n\n  handleCategoryChange = (selectedOption) => {\n    this.setState({\n      ...this.state,\n      listCategory: selectedOption.value\n    });\n  }\n\n  render () {\n    if (!this.props.isAuthenticated) {\n      return (\n          <Redirect to=\"/login\" />\n      )\n    } else if (!this.props.isStartup) {\n      return (\n          <Redirect to=\"/\" />\n      )\n    }\n    else return (\n        <>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Edit your listing</h1>\n            </div>\n          </div>\n          <br/>\n\n          <Container id=\"user-settings\">\n            <h1>Listing Information</h1>\n              <form  onSubmit={(e) => {e.preventDefault(); this.updateListing()}}>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"listing-title\" >Position Title:</label></Col>\n                  <Col md={10} sm={12}><input id=\"listing-title\" defaultValue={this.state.listing.listName} placeholder=\"Ex. Public Relations Intern\" autoComplete=\"organization-title\" minLength=\"3\" maxLength=\"50\" title=\"Enter alphanumeric charcters and hyphens only.\" /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"short-desc\" >Short Description (160 characters):</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"short-desc\" defaultValue={this.state.listing.listDesc} maxLength=\"160\" placeholder=\"\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"app-url\" >Application URL (HTTP or mailto address):</label></Col>\n                  <Col md={10} sm={12}><input id=\"app-url\" defaultValue={this.state.listing.externalLink} placeholder=\"Ex. https://mycompany.com/jobs?id=0, mailto:jobs@company.com\" type=\"url\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"category\">Job Category:</label></Col>\n                  <Col md={10} sm={12}>\n                    <Select\n                      options={categoryList}\n                      className=\"filter-dropdown\"\n                      onChange={this.handleCategoryChange}\n                      defaultValue={this.state.listing.listCategory}\n                      theme={theme => ({\n                       ...theme,\n                       borderRadius: \"8px\",\n                       colors: {\n                         ...theme.colors,\n                         primary25: '#eeeeee',\n                         primary: '#3d5afe',\n                         primary50: '#e8e8e8',\n                       },\n                      })}>\n                    </Select>\n                  </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"location\">Location:</label></Col>\n                  <Col md={10} sm={12}><input id=\"location\" defaultValue={this.state.listing.listLocation} placeholder=\"Ex. Champaign, IL\" autoComplete=\"\" minLength=\"1\" maxLength=\"50\" title=\"Enter alphanumeric charcters, hyphens and spaces only.\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"deadline\">Deadline:</label></Col>\n                  <Col md={10} sm={12}><input id=\"deadline\" defaultValue={this.state.listing.listDeadline} min={minDate} max={maxDate} type=\"date\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"long-desc\" >Full Description:</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"long-desc\" defaultValue={this.state.listing.listLongDesc} minLength=\"100\" maxLength=\"7500\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"create-listing\">Update Listing:</label></Col>\n                  <Col md={10} sm={12}><button id=\"create-listing\" type=\"submit\">Update Listing</button></Col>\n                </Row>\n              </form>\n          </Container>\n        </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default withRouter(connect(mapStateToProps)(EditListing));\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { connect } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router-dom';\nimport * as axios from 'axios';\nimport Select from \"react-select\";\nimport { industryList } from '../static/constants'\n\n/* ------------------------- */\n\nclass Settings extends Component {\n  state = {\n\n  }\n\n  handleUserError() {\n    console.error(\"User Error\");\n  }\n\n  bounce() {\n    this.props.history.push('/login');\n  }\n\n  handleIndustryChange = (selectedOption) => {\n    this.setState({\n      ...this.state,\n      industry: selectedOption.value\n    });\n//    console.log(this.state.listCategory);\n  }\n\n  async updateSettings() {\n    try {\n      const data = {\n        \"orgName\" : document.getElementById(\"org-name\").value,\n        \"orgLocation\" : document.getElementById(\"location\").value,\n        \"orgDesc\" : document.getElementById(\"desc\").value,\n        \"orgIndustry\" : this.state.industry\n      }\n      const profileResponse = await axios({\n          url:' /api/startups/' + this.props.user.id + '/',\n          method: 'PATCH',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Authorization': 'Token ' + localStorage.getItem(\"token\")\n          },\n          data: data\n        });\n      const userJson = await profileResponse.data;\n      this.props.dispatch({ type: \"UPDATEUSER\", user: userJson });\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  addDefaultSrc(ev) {\n    ev.target.src = '/img/usr/missing.png';\n  }\n\n  render () {\n      if (!this.props.isAuthenticated) {\n        return (\n          <Redirect to=\"/login\" />\n        )\n      } else if (!this.props.isStartup) {\n        return (\n          <Redirect to=\"/\" />\n        )\n      }\n\n      return (\n        <>\n          <div className=\"hero\">\n            <div className=\"hero-inner\">\n              <h1>Your Settings</h1>\n            </div>\n          </div>\n          <br />\n          <Container id=\"user-settings\">\n            <h1>Company Settings</h1>\n              <form onSubmit={(e) => {e.preventDefault(); this.updateSettings()}}>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"org-name\" >Company Name:</label></Col>\n                  <Col md={10} sm={12}><input id=\"org-name\" defaultValue={this.props.user.orgName} autoComplete=\"given-name\" minLength=\"1\" maxLength=\"30\" title=\"Enter alphanumeric charcters and hyphens only.\" /></Col>\n                </Row>\n              {/*}\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"new-email\" >Update Email:</label></Col>\n                  <Col md={10} sm={12}><input id=\"new-email\" type=\"email\" ></input></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"confirm-email\" type=\"email\">Confirm Email:</label></Col>\n                  <Col md={10} sm={12}><input id=\"confirm-email\" type=\"email\" ></input></Col>\n                </Row>\n              {*/}\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"desc\" >Company Description (220 characters):</label></Col>\n                  <Col md={10} sm={12}><textarea id=\"desc\" maxLength=\"220\" defaultValue={this.props.user.orgDesc} /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"location\" >Company Location:</label></Col>\n                  <Col md={10} sm={12}><input id=\"location\" maxLength=\"32\" defaultValue={this.props.user.orgLocation} autoComplete=\"address-level2\" /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"industry\">Industry:</label></Col>\n                  <Col md={10} sm={12}>\n                    <Select\n                        options={industryList}\n                        className=\"filter-dropdown\"\n                        onChange={this.handleIndustryChange}\n                        theme={theme => ({\n                          ...theme,\n                          borderRadius: \"8px\",\n                          colors: {\n                            ...theme.colors,\n                            primary25: '#eeeeee',\n                            primary: '#3d5afe',\n                            primary50: '#e8e8e8',\n                          },\n                        })}>\n                    </Select>\n                  </Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"confirm-password-2\">Confirm Password:</label></Col>\n                  <Col md={10} sm={12}><input id=\"confirm-password-2\" type=\"password\" autoComplete=\"current-password\" title=\"Confirm Password to make changes.\" required /></Col>\n                </Row>\n                <Row className=\"setting-row\">\n                  <Col md={2} sm={12}><label htmlFor=\"submit-profile\">Update Settings</label></Col>\n                  <Col md={10} sm={12}><button id=\"submit-profile\" type=\"submit\">Update Settings</button></Col>\n                </Row>\n              </form>\n              <hr />\n              <h1>Upload/Change Avatar</h1>\n                <form>\n                  <Row className=\"setting-row\">\n                    <Col md={2} sm={12}><label htmlFor=\"avatar\" >\n                      Upload A Square PNG:</label>\n                    </Col>\n                    <Col md={10} sm={12}>\n                      <input id=\"avatar\" type=\"file\" name=\"pic\" accept=\".png\" />\n                    </Col>\n                  </Row>\n                  <Row className=\"setting-row\">\n                    <Col md={2} sm={12}><label htmlFor=\"submit-avatar\">Update Avatar</label></Col>\n                    <Col md={10} sm={12}><button id=\"submit-avatar\" type=\"submit\">Update Avatar</button></Col>\n                  </Row>\n                </form>\n          </Container>\n        </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default withRouter(connect(mapStateToProps)(Settings));\n","import React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport * as axios from 'axios';\nimport BannerError from './BannerError';\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBookmark as bookmarkActive, faUser as userActive, faSearch as search, faCaretDown as darr, faFolderOpen as jobsActive, faCommentAlt as logoActive, faSignInAlt as login, faBars as menu, faCog as settings, faCogs as settingsActive, faSignOutAlt as signoutIcon } from '@fortawesome/free-solid-svg-icons'\nimport { faBookmark as bookmark, faUser as user, faFolderOpen as jobs, faCommentAlt as logo } from '@fortawesome/free-regular-svg-icons'\n// redux\nimport { connect } from 'react-redux';\n\nclass Nav extends Component {\n  state = {\n    active: false\n  };\n\n    searchForward = () => {\n        this.props.history.push({\n            pathname: '/jobs',\n            state: {\n                search: document.getElementById(\"jobs-search-bar\").value\n            }\n        });\n        if(this.props.location.pathname === \"/jobs\") {\n            window.location.reload();\n        }\n    };\n\n  async logout(e) {\n    try {\n      const response = await axios({\n          url: '/api/auth/logout',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Authorization': 'Token ' + localStorage.getItem(\"token\")\n          }\n      });\n      localStorage.removeItem(\"token\");\n      this.props.dispatch({ type: \"LOGOUT\" });\n    } catch (error) {\n      if (error.response.status === 400 || error.response.status === 401) {\n        localStorage.removeItem(\"token\");\n        this.props.dispatch({ type: \"LOGOUT\" });\n      } else {\n          console.error(error);\n          localStorage.removeItem(\"token\");\n          this.props.dispatch({ type: \"LOGOUT\" });\n      }\n    }\n    console.log(\"logged off\");\n  }\n\n    keyPressed(event) {\n        if (event.key === \"Enter\") {\n            document.getElementById(\"nav-search-icon-wrapper\").click();\n        }\n    }\n\n  render () {\n      return (\n        <nav>\n            {/*<BannerError type=\"success\" message=\"Test success message STR\" />*/}\n          <ul className=\"mobile-nav\" id=\"mobile-nav-fetch\">\n            <li>\n              <NavLink to=\"/\" exact activeClassName=\"active-nav\" id=\"logo-nav-mobile\">\n                <FontAwesomeIcon className=\"def-icon\" icon={logo} />\n                <FontAwesomeIcon className=\"act-icon\" icon={logoActive} />\n                &nbsp; StartupMatch\n              </NavLink>\n            </li>\n            <li>\n              <button id=\"mobile-menu-toggle\" onClick={ () =>\n                  {\n                      window.scrollTo(0, 0);\n                    this.setState({active: !this.state.active});\n                    var x = document.getElementById('html');\n                    if (x.style.overflow === \"hidden\") x.style.overflow = \"auto\";\n                    else x.style.overflow = \"hidden\";\n                  }\n                }>\n                <FontAwesomeIcon icon={menu} />\n              </button>\n            </li>\n          </ul>\n          <ul id=\"nav-links\" className={this.state.active ? 'toggle-mobile-nav' : undefined} >\n           <li id=\"nav-logo-link\">\n             <NavLink to=\"/\" exact activeClassName=\"active-nav\">\n               <FontAwesomeIcon className=\"def-icon\" icon={logo} />\n               <FontAwesomeIcon className=\"act-icon\" icon={logoActive} />\n               &nbsp; StartupMatch\n             </NavLink>\n           </li>\n           <li id=\"search-nav\">\n             <input type=\"search\" id=\"jobs-search-bar\" placeholder=\"Search for a job...\" className=\"search\" onKeyPress={this.keyPressed} />\n             <button id=\"nav-search-icon-wrapper\" onClick={this.searchForward}>\n               <FontAwesomeIcon icon={search} style={{verticalAlign: 'bottom', color: '#8e8e8e', fontSize: 16 + 'px', marginBottom: 2 + 'px'}} />\n             </button>\n           </li>\n           <li>\n             <NavLink to=\"/jobs\" exact activeClassName=\"active-nav\">\n               <FontAwesomeIcon className=\"def-icon\" icon={jobs} />\n               <FontAwesomeIcon className=\"act-icon\" icon={jobsActive} />\n               &nbsp; Jobs\n             </NavLink>\n           </li>\n           <li>\n             <NavLink to=\"/bookmarks\" exact activeClassName=\"active-nav\">\n               <FontAwesomeIcon className=\"def-icon\" icon={bookmark} />\n               <FontAwesomeIcon className=\"act-icon\" icon={bookmarkActive} />\n               &nbsp; Bookmarks\n             </NavLink>\n           </li>\n           {this.props.isAuthenticated ?\n             (<>\n              <li className=\"dropdown\">\n                <span id=\"nav-drop-link\">\n                  <FontAwesomeIcon className=\"def-icon\" icon={user} />\n                  <FontAwesomeIcon className=\"act-icon\" icon={userActive} />\n                  &nbsp; Me &nbsp;\n                  <span className=\"dropdown-arr\"><FontAwesomeIcon icon={darr} /></span>\n                </span>\n                <div className=\"dropdown-content\">\n                  <NavLink to={\"/user-profile/\" + this.props.user.id}>Profile</NavLink>\n                  {/*<NavLink to=\"/applications/\">Applied</NavLink>*/}\n                  <hr />\n                  <NavLink to=\"/user-settings\">Settings</NavLink>\n                  <a onClick={(e) => {e.preventDefault(); this.logout()}} >Logout</a>\n                </div>\n              </li>\n              <li className=\"show-on-mobile\">\n                <NavLink to={\"/user-profile/\" + this.props.user.id} exact activeClassName=\"active-nav\">\n                  <FontAwesomeIcon className=\"def-icon\" icon={user} />\n                  <FontAwesomeIcon className=\"act-icon\" icon={userActive} />\n                  &nbsp; Profile\n                </NavLink>\n              </li>\n              <li className=\"show-on-mobile\">\n                <NavLink to=\"/user-settings\" exact activeClassName=\"active-nav\">\n                  <FontAwesomeIcon className=\"def-icon\" icon={settings} />\n                  <FontAwesomeIcon className=\"act-icon\" icon={settingsActive} />\n                  &nbsp; Settings\n                </NavLink>\n              </li>\n              <li className=\"show-on-mobile\">\n                <a onClick={(e) => {e.preventDefault(); this.logout()}} >\n                  <FontAwesomeIcon icon={signoutIcon} />\n                  &nbsp; Logout\n                </a>\n              </li>\n            </>) : (<>\n            <li>\n              <NavLink to=\"/login\" exact activeClassName=\"active-nav\">\n                <FontAwesomeIcon icon={login} />\n                &nbsp; Login\n              </NavLink>\n            </li>\n            </>)\n        }\n          </ul>\n        </nav>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated\n});\n\nexport default withRouter(connect(mapStateToProps)(Nav));\n","import React, { Component } from 'react';\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle as Error, faCheckCircle as Success, faInfoCircle as Info } from '@fortawesome/free-solid-svg-icons'\n\nexport default class BannerError extends Component {\n    state = {\n    }\n\n    render () {\n        return (\n            <div className={\"banner-error \" + this.props.type} >\n                <p className=\"message\">\n                    <FontAwesomeIcon icon={ this.props.type === \"error\" ? Error : ( this.props.type === \"success\" ? Success : Info)} /> &nbsp;\n                    {this.props.message}\n                </p>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport * as axios from 'axios';\nimport { connect } from 'react-redux';\n// Icons\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit as listingsActive, faBuilding as userActive, faCaretDown as darr, faAddressCard as studentsActive, faCommentAlt as logoActive, faCompass as dashboardActive } from '@fortawesome/free-solid-svg-icons'\nimport { faEdit as listings, faBuilding as user, faAddressCard as students, faCommentAlt as logo, faCompass as dashboard } from '@fortawesome/free-regular-svg-icons'\n\nclass NavStartup extends Component {\n  state = {\n  }\n\n  async logout(e) {\n    try {\n      const response = await axios({\n          url: '/api/auth/logout',\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json;charset=UTF-8',\n            'Authorization': 'Token ' + localStorage.getItem(\"token\")\n          }\n      });\n      localStorage.removeItem(\"token\");\n      this.props.dispatch({ type: \"LOGOUT\" });\n      this.props.history.push('/');\n    } catch (error) {\n        this.props.dispatch({ type: \"LOGOUT\" });\n        this.props.history.push('/');\n    }\n  }\n\n  render () {\n      return (\n        <nav>\n          <ul style={{height: \"64px\"}}>\n           {/*Logo/Home Link*/}\n           <li>\n             <NavLink to=\"/\" exact activeClassName=\"active-nav\">\n               <FontAwesomeIcon className=\"def-icon\" icon={logo} />\n               <FontAwesomeIcon className=\"act-icon\" icon={logoActive} />\n               &nbsp; StartupMatch\n             </NavLink>\n           </li>\n           {/* Dashboard */}\n           <li>\n             <NavLink to=\"/dashboard\" exact activeClassName=\"active-nav\">\n               <FontAwesomeIcon className=\"def-icon\" icon={dashboard} />\n               <FontAwesomeIcon className=\"act-icon\" icon={dashboardActive} />\n               &nbsp; Dashboard\n             </NavLink>\n           </li>\n           {/*Search for students/recruit*/}\n           <li>\n             <NavLink to=\"/recruit\" exact activeClassName=\"active-nav\">\n               <FontAwesomeIcon className=\"def-icon\" icon={students} />\n               <FontAwesomeIcon className=\"act-icon\" icon={studentsActive} />\n               &nbsp; Students\n             </NavLink>\n           </li>\n           {/*This Startup's Listings*/}\n           <li>\n             <NavLink to=\"/my-listings\" exact activeClassName=\"active-nav\">\n               <FontAwesomeIcon className=\"def-icon\" icon={listings} />\n               <FontAwesomeIcon className=\"act-icon\" icon={listingsActive} />\n               &nbsp; My Listings\n             </NavLink>\n           </li>\n           {/*Dropdown for settings/extra links*/}\n           <li className=\"dropdown\">\n             <span id=\"nav-drop-link\">\n               <FontAwesomeIcon className=\"def-icon\" icon={user} />\n               <FontAwesomeIcon className=\"act-icon\" icon={userActive} />\n               &nbsp; Me &nbsp;\n               <span className=\"dropdown-arr\"><FontAwesomeIcon icon={darr} /></span>\n             </span>\n             <div className=\"dropdown-content\">\n               <NavLink to={\"/org/\" + this.props.user.id} >Profile</NavLink>\n               <hr />\n               <NavLink to=\"/org-settings\">Settings</NavLink>\n               <a onClick={(e) => {e.preventDefault(); this.logout()}} >Logout</a>\n             </div>\n           </li>\n          </ul>\n        </nav>\n      )\n   }\n}\n\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default withRouter(connect(mapStateToProps)(NavStartup));\n","import React, { Component } from 'react';\nimport Nav from './Nav';\nimport NavStartup from './NavStartup';\n\nimport { connect } from 'react-redux';\n\nclass MasterNav extends Component {\n  state = {\n  }\n\n  render () {\n      return (\n        <>\n          { this.props.isStartup && <NavStartup /> }\n          { !this.props.isStartup && <Nav /> }\n        </>\n      )\n   }\n}\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n  isAuthenticated: state.isAuthenticated,\n  isStartup: state.isStartup\n});\n\nexport default connect(mapStateToProps)(MasterNav)\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-grid-system';\nimport { Link } from 'react-router-dom';\n\nexport default class Footer extends Component {\n  state = {\n  }\n\n  render () {\n      return (\n        <footer>\n          <Container>\n            <Row>\n              <Col size=\"3\">\n                <h5>Students</h5>\n                <Link to=\"jobs\">Jobs</Link>\n                <Link to=\"bookmarks\">Bookmarks</Link>\n                <Link to=\"user-profile\">Profile</Link>\n              </Col>\n              <Col size=\"3\">\n                <h5>Startups</h5>\n                <Link to=\"students\">Recruit</Link>\n                <Link to=\"my-listings\">Listings</Link>\n                <Link to=\"startup-profile\">Profile</Link>\n              </Col>\n              <Col size=\"3\">\n                <h5>Support</h5>\n                <Link to=\"docs\">Documentation</Link>\n                <Link to=\"privacy-policy\">Privacy Policy</Link>\n                <Link to=\"about\">About</Link>\n              </Col>\n              <Col size=\"3\">\n                <p>\n                  Copyright &copy; 2019 Client Company\n                  <span className=\"lastlines\"><br></br>1st Street, Acton MA 01720\n                  <br></br>+1 (781) 708-6950\n                  <br></br>email@host.com\n                  </span>\n                </p>\n              </Col>\n            </Row>\n          </Container>\n        </footer>\n      )\n   }\n}\n","import React from 'react';\nimport './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\n\n// Pages\nimport Home from './views/Home';\nimport Jobs from './views/Jobs'\nimport Bookmarks from './views/Bookmarks';\nimport Profile from './views/Profile';\nimport Settings from './views/Settings';\nimport Dashboard from './views/Dashboard';\nimport OrgProfile from './views/OrgProfile';\nimport MyListings from './views/MyListings';\nimport LogIn from './views/LogIn';\nimport Error from './views/Error';\nimport NewListing from './views/NewListing';\nimport JobPage from './views/JobPage';\nimport InitAccount from './views/InitAccount';\nimport Students from './views/Students';\nimport EditListing from \"./views/EditListing\";\nimport OrgSettings from \"./views/OrgSettings\";\n\n// Components\nimport MasterNav from './components/MasterNav';\nimport Footer from './components/Footer';\n\n/*\n * TEMP: To switch between startup/student navigation bars just\n * change the <NavAdmin /> OR <Nav /> request while we wait for\n * user auth to be prepared\n */\n\nfunction App() {\n  return (\n    <div className=\"App\" >\n    <BrowserRouter>\n        <MasterNav />\n        <span style={{ height: \"40vh\" }} >\n          <Switch>\n            <Route exact={true} path='/' render={() => (\n                <Home />\n            )}/>\n            <Route exact={true} path='/user-profile/:uid' render={({ match }) => (\n                <Profile userID={match.params.uid} />\n            )}/>\n            <Route exact={true} path='/jobs' render={() => (\n                <Jobs />\n            )}/>\n            <Route exact={true} path='/user-settings' render={() => (\n                <Settings />\n            )}/>\n            <Route exact={true} path='/org-settings' render={() => (\n                <OrgSettings />\n                )}/>\n            <Route exact={true} path='/bookmarks' render={() => (\n                <Bookmarks />\n            )}/>\n            <Route exact={true} path='/my-listings' render={() => (\n                <MyListings />\n            )}/>\n            <Route exact={true} path='/dashboard' render={() => (\n                <Dashboard />\n            )}/>\n            <Route exact={true} path='/login' render={() => (\n                <LogIn />\n            )}/>\n            <Route exact={true} path='/my-listings/new' render={() => (\n                <NewListing />\n            )}/>\n            <Route exact={true} path='/my-listings/edit/:lid' render={({ match }) => (\n                <EditListing listingID={match.params.lid} />\n            )}/>\n            <Route exact={true} path='/listing/:lid' render={({ match }) => (\n                <JobPage listingID={match.params.lid} />\n            )}/>\n            <Route exact={true} path='/org/:oid' render={({ match }) => (\n                <OrgProfile listingID={match.params.oid} />\n            )}/>\n            <Route exact={true} path='/signup' render={() => (\n                <InitAccount />\n            )}/>\n            <Route exact={true} path='/recruit' render={() => (\n                <Students />\n            )}/>\n            <Route component={Error} />\n          </Switch>\n        </span>\n        <Footer id=\"footer\" />\n    </BrowserRouter>\n  </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport './index.css';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport storage from 'redux-persist/lib/storage'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isStartup: false\n};\n\nconst reducer = (state = initialState, action) => {\n//  console.log(action);\n  switch (action.type) {\n      case \"LOGIN\":\n        state = {\n          ...state,\n          user: action.user,\n          isAuthenticated: true,\n          isStartup: action.isStartup\n        };\n        break;\n      case \"LOGOUT\":\n        state = {\n          ...state,\n          user: null,\n          isAuthenticated: false,\n          isStartup: false\n        };\n        break;\n      case \"UPDATEUSER\":\n        state = {\n          ...state,\n          user: action.user\n        };\n        break;\n      default:\n        break;\n  }\n  return state;\n};\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducer)\n\nlet store = createStore(persistedReducer);\nlet persistor = persistStore(store);\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}